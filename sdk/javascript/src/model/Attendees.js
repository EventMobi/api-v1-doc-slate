/**
 * eventmobi
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Config', 'model/CustomFieldsNames', 'model/Items'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Config'), require('./CustomFieldsNames'), require('./Items'));
  } else {
    // Browser globals (root is window)
    if (!root.Eventmobi) {
      root.Eventmobi = {};
    }
    root.Eventmobi.Attendees = factory(root.Eventmobi.ApiClient, root.Eventmobi.Config, root.Eventmobi.CustomFieldsNames, root.Eventmobi.Items);
  }
}(this, function(ApiClient, Config, CustomFieldsNames, Items) {
  'use strict';




  /**
   * The Attendees model module.
   * @module model/Attendees
   * @version api-v2
   */

  /**
   * Constructs a new <code>Attendees</code>.
   * @alias module:model/Attendees
   * @class
   */
  var exports = function() {
    var _this = this;














  };

  /**
   * Constructs a <code>Attendees</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Attendees} obj Optional instance to populate.
   * @return {module:model/Attendees} The populated <code>Attendees</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('custom_fields_names')) {
        obj['custom_fields_names'] = ApiClient.convertToType(data['custom_fields_names'], [CustomFieldsNames]);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('color_class')) {
        obj['color_class'] = ApiClient.convertToType(data['color_class'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
      if (data.hasOwnProperty('event_id')) {
        obj['event_id'] = ApiClient.convertToType(data['event_id'], 'Integer');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('icon_class')) {
        obj['icon_class'] = ApiClient.convertToType(data['icon_class'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Integer');
      }
      if (data.hasOwnProperty('page')) {
        obj['page'] = ApiClient.convertToType(data['page'], 'String');
      }
      if (data.hasOwnProperty('position')) {
        obj['position'] = ApiClient.convertToType(data['position'], 'Integer');
      }
      if (data.hasOwnProperty('items')) {
        obj['items'] = ApiClient.convertToType(data['items'], [Items]);
      }
      if (data.hasOwnProperty('config')) {
        obj['config'] = Config.constructFromObject(data['config']);
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'Integer');
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/CustomFieldsNames>} custom_fields_names
   */
  exports.prototype['custom_fields_names'] = undefined;
  /**
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {String} color_class
   */
  exports.prototype['color_class'] = undefined;
  /**
   * @member {String} url
   */
  exports.prototype['url'] = undefined;
  /**
   * @member {Integer} event_id
   */
  exports.prototype['event_id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} icon_class
   */
  exports.prototype['icon_class'] = undefined;
  /**
   * @member {Integer} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} page
   */
  exports.prototype['page'] = undefined;
  /**
   * @member {Integer} position
   */
  exports.prototype['position'] = undefined;
  /**
   * @member {Array.<module:model/Items>} items
   */
  exports.prototype['items'] = undefined;
  /**
   * @member {module:model/Config} config
   */
  exports.prototype['config'] = undefined;
  /**
   * @member {Integer} status
   */
  exports.prototype['status'] = undefined;



  return exports;
}));


