{
    "swagger": "2.0",
    "info": {
        "title": "EventMobi API V2 Spec",
        "description": "Eventmobi Public API documentation.\n\nPlease refer to [developer site for tutotials, SDK and helps](http://google.ca).\n\nUpdated Aug 2016. Please refer to the [patch notes for details](http://google.ca).\n",
        "version": "2.0.1a"
    },
    "host": "api.eventmobi.com",
    "schemes": [
        "https"
    ],
    "basePath": "/en/api/v2",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/events/{event_id}/people": {
            "get": {
                "summary": "GET people",
                "description": "This request will return an overview of people data statistics in specific events. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The statistics of people data",
                        "schema": {
                            "type": "object",
                            "description": "The statistics of people data",
                            "properties": {
                                "people_number": {
                                    "type": "integer",
                                    "description": "people number in this event. You may use this number for better query pagination."
                                },
                                "group_number": {
                                    "type": "integer",
                                    "description": "the number of groups defined"
                                },
                                "custom_field_number": {
                                    "type": "integer",
                                    "description": "the number of custom fields"
                                },
                                "groups": {
                                    "type": "array",
                                    "description": "the groups defined in this event.",
                                    "items": {
                                        "type": "object",
                                        "description": "The base response model of groups",
                                        "properties": {
                                            "group_id": {
                                                "type": "string",
                                                "description": "the unique ID of group"
                                            },
                                            "external_ids": {
                                                "type": "array",
                                                "description": "the external IDs used for integrations",
                                                "items": {
                                                    "type": "object",
                                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                                    "properties": {
                                                        "id_system": {
                                                            "type": "string",
                                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                        }
                                                    }
                                                }
                                            },
                                            "group_type": {
                                                "type": "string",
                                                "description": "for people group, it could be \"attendees\" or \"speakers\" or \"custom\". For other groups, it will be always \"custom\" for now.",
                                                "enum": [
                                                    "attendees",
                                                    "speakers",
                                                    "custom"
                                                ]
                                            },
                                            "group_name": {
                                                "type": "string",
                                                "description": "the unique name of group"
                                            },
                                            "group_color": {
                                                "type": "string",
                                                "format": "#RRGGBB",
                                                "description": "the HEX color code in #RRGGBB"
                                            },
                                            "member_number": {
                                                "type": "number",
                                                "description": "the auto-generated number of members in this group"
                                            },
                                            "timestamps": {
                                                "type": "object",
                                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                                "properties": {
                                                    "request_datetime": {
                                                        "type": "string",
                                                        "description": "The time of this API request"
                                                    },
                                                    "creation_datetime": {
                                                        "type": "string",
                                                        "description": "the time of object creation"
                                                    },
                                                    "update_datetime": {
                                                        "type": "string",
                                                        "description": "the time of last modification"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "the custom fields defined in this event",
                                    "items": {
                                        "type": "object",
                                        "description": "The base custom field model",
                                        "properties": {
                                            "custom_field_id": {
                                                "type": "string",
                                                "description": "the unique ID of custom field"
                                            },
                                            "external_ids": {
                                                "type": "array",
                                                "description": "the external IDs used for integrations",
                                                "items": {
                                                    "type": "object",
                                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                                    "properties": {
                                                        "id_system": {
                                                            "type": "string",
                                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                        }
                                                    }
                                                }
                                            },
                                            "field_name": {
                                                "type": "string",
                                                "description": "the field name"
                                            },
                                            "view_permission": {
                                                "type": "string",
                                                "enum": [
                                                    "Everyone",
                                                    "Organizer and Data Owner",
                                                    "Organizer"
                                                ]
                                            },
                                            "edit_permission": {
                                                "type": "string",
                                                "enum": [
                                                    "Everyone",
                                                    "Organizer and Data Owner",
                                                    "Organizer"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/resources": {
            "get": {
                "summary": "GET person",
                "description": "This request will return an array of people data statistics in specific events. Default paginition is the first 20 records from offset 0. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "filter results by specific IDs. Please use \",\" to seperate multiple items.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "emails",
                        "in": "query",
                        "description": "filter results by specific Emails. Please use \",\" to seperate multiple items.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "groups",
                        "in": "query",
                        "description": "filter results by specific Groups. Please use \",\" to seperate multiple items.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limits the number of returned results",
                        "required": false,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Define the offset index of returned results",
                        "required": false,
                        "type": "number",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The array of people",
                        "schema": {
                            "type": "object",
                            "description": "the query of people",
                            "properties": {
                                "query_string": {
                                    "type": "string",
                                    "description": "the original query string. Offset and limit parameter will show default value (offset=0&limit=20) if not provided in original request."
                                },
                                "record_number": {
                                    "type": "integer",
                                    "description": "the number of recodes that matches query. If no query filters requested, this will be the total number of people."
                                },
                                "people_list": {
                                    "type": "array",
                                    "description": "the array of people",
                                    "items": {
                                        "type": "object",
                                        "description": "the single person record",
                                        "properties": {
                                            "person_id": {
                                                "type": "string",
                                                "description": "the unique ID of person in people"
                                            },
                                            "external_ids": {
                                                "type": "array",
                                                "description": "the external IDs used for integrations",
                                                "items": {
                                                    "type": "object",
                                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                                    "properties": {
                                                        "id_system": {
                                                            "type": "string",
                                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                        }
                                                    }
                                                }
                                            },
                                            "profile": {
                                                "type": "object",
                                                "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                                "properties": {
                                                    "first_name": {
                                                        "type": "string"
                                                    },
                                                    "last_name": {
                                                        "type": "string"
                                                    },
                                                    "email_address": {
                                                        "type": "string"
                                                    },
                                                    "picture_url": {
                                                        "type": "string",
                                                        "description": "the URL of /resource/picture returns after pictures uploaded"
                                                    },
                                                    "company": {
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "about": {
                                                        "type": "string"
                                                    },
                                                    "social_contacts": {
                                                        "type": "object",
                                                        "description": "The general contact info record",
                                                        "properties": {
                                                            "twitter_url": {
                                                                "type": "string"
                                                            },
                                                            "facebook_url": {
                                                                "type": "string"
                                                            },
                                                            "linkedin_url": {
                                                                "type": "string"
                                                            },
                                                            "website_url": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "custom_fields_meta": {
                                                "type": "object",
                                                "description": "the {custom_field_id:custom_field_value} format JSON object"
                                            },
                                            "groups": {
                                                "type": "array",
                                                "description": "The array of groups",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "group_id": {
                                                            "type": "string",
                                                            "description": "the unique ID of group"
                                                        },
                                                        "group_name": {
                                                            "type": "string",
                                                            "description": "the name of group"
                                                        }
                                                    }
                                                }
                                            },
                                            "agenda": {
                                                "type": "object",
                                                "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                                "properties": {
                                                    "sessions": {
                                                        "type": "array",
                                                        "description": "sessions info in array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "session_id": {
                                                                    "type": "string",
                                                                    "description": "the session ID"
                                                                },
                                                                "session_roles": {
                                                                    "type": "array",
                                                                    "description": "the session role IDs in array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "favorite_data": {
                                                "type": "object",
                                                "properties": {
                                                    "sessions": {
                                                        "type": "array",
                                                        "description": "the personal agenda with session IDs to attend",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "companies": {
                                                        "type": "object"
                                                    },
                                                    "docs": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "docs": {
                                                "type": "array",
                                                "description": "the docs linked to the people",
                                                "items": {
                                                    "type": "string",
                                                    "description": "The document ID"
                                                }
                                            },
                                            "personal_settings": {
                                                "type": "object",
                                                "description": "'the {config_feature_key:config_value} format JSON object E.g.  {\"direct_messaging\":\"true\", \"offline_email_messaging\": \"true\"}.'\n"
                                            },
                                            "timestamps": {
                                                "type": "object",
                                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                                "properties": {
                                                    "request_datetime": {
                                                        "type": "string",
                                                        "description": "The time of this API request"
                                                    },
                                                    "creation_datetime": {
                                                        "type": "string",
                                                        "description": "the time of object creation"
                                                    },
                                                    "update_datetime": {
                                                        "type": "string",
                                                        "description": "the time of last modification"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "POST person",
                "description": "Add new person in the event\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture_resource_id": {
                                            "type": "string",
                                            "description": "the resource ID of pictures uploaded"
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                                },
                                "assign_groups": {
                                    "type": "array",
                                    "description": "the array of group IDs",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "assign_agenda": {
                                    "type": "object",
                                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "sessions info in array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "session_id": {
                                                        "type": "string",
                                                        "description": "the session ID"
                                                    },
                                                    "session_roles": {
                                                        "type": "array",
                                                        "description": "the session role IDs in array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture_url in base profile, and the value in picture_url will be ignored.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. The height and width of crop must be the same (image needs to be square). This parameter is required if your image is not square."
                                        }
                                    }
                                },
                                "link_docs": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "description": "the array of Document IDs",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record created",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture_url": {
                                            "type": "string",
                                            "description": "the URL of /resource/picture returns after pictures uploaded"
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                                },
                                "groups": {
                                    "type": "array",
                                    "description": "The array of groups",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "group_id": {
                                                "type": "string",
                                                "description": "the unique ID of group"
                                            },
                                            "group_name": {
                                                "type": "string",
                                                "description": "the name of group"
                                            }
                                        }
                                    }
                                },
                                "agenda": {
                                    "type": "object",
                                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "sessions info in array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "session_id": {
                                                        "type": "string",
                                                        "description": "the session ID"
                                                    },
                                                    "session_roles": {
                                                        "type": "array",
                                                        "description": "the session role IDs in array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "the personal agenda with session IDs to attend",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "personal_settings": {
                                    "type": "object",
                                    "description": "'the {config_feature_key:config_value} format JSON object E.g.  {\"direct_messaging\":\"true\", \"offline_email_messaging\": \"true\"}.'\n"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/resources/{person_id}": {
            "get": {
                "summary": "GET person_id",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The single person record",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture_url": {
                                            "type": "string",
                                            "description": "the URL of /resource/picture returns after pictures uploaded"
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                                },
                                "groups": {
                                    "type": "array",
                                    "description": "The array of groups",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "group_id": {
                                                "type": "string",
                                                "description": "the unique ID of group"
                                            },
                                            "group_name": {
                                                "type": "string",
                                                "description": "the name of group"
                                            }
                                        }
                                    }
                                },
                                "agenda": {
                                    "type": "object",
                                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "sessions info in array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "session_id": {
                                                        "type": "string",
                                                        "description": "the session ID"
                                                    },
                                                    "session_roles": {
                                                        "type": "array",
                                                        "description": "the session role IDs in array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "the personal agenda with session IDs to attend",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "personal_settings": {
                                    "type": "object",
                                    "description": "'the {config_feature_key:config_value} format JSON object E.g.  {\"direct_messaging\":\"true\", \"offline_email_messaging\": \"true\"}.'\n"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "PATCH person_id",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture_resource_id": {
                                            "type": "string",
                                            "description": "the resource ID of pictures uploaded"
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                                },
                                "assign_groups": {
                                    "type": "array",
                                    "description": "the array of group IDs",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "assign_agenda": {
                                    "type": "object",
                                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "sessions info in array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "session_id": {
                                                        "type": "string",
                                                        "description": "the session ID"
                                                    },
                                                    "session_roles": {
                                                        "type": "array",
                                                        "description": "the session role IDs in array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture_url in base profile, and the value in picture_url will be ignored.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. The height and width of crop must be the same (image needs to be square). This parameter is required if your image is not square."
                                        }
                                    }
                                },
                                "link_docs": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "description": "the array of Document IDs",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record updated",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture_url": {
                                            "type": "string",
                                            "description": "the URL of /resource/picture returns after pictures uploaded"
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                                },
                                "groups": {
                                    "type": "array",
                                    "description": "The array of groups",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "group_id": {
                                                "type": "string",
                                                "description": "the unique ID of group"
                                            },
                                            "group_name": {
                                                "type": "string",
                                                "description": "the name of group"
                                            }
                                        }
                                    }
                                },
                                "agenda": {
                                    "type": "object",
                                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "sessions info in array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "session_id": {
                                                        "type": "string",
                                                        "description": "the session ID"
                                                    },
                                                    "session_roles": {
                                                        "type": "array",
                                                        "description": "the session role IDs in array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "the personal agenda with session IDs to attend",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "personal_settings": {
                                    "type": "object",
                                    "description": "'the {config_feature_key:config_value} format JSON object E.g.  {\"direct_messaging\":\"true\", \"offline_email_messaging\": \"true\"}.'\n"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "PUT person_id",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture_resource_id": {
                                            "type": "string",
                                            "description": "the resource ID of pictures uploaded"
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                                },
                                "assign_groups": {
                                    "type": "array",
                                    "description": "the array of group IDs",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "assign_agenda": {
                                    "type": "object",
                                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "sessions info in array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "session_id": {
                                                        "type": "string",
                                                        "description": "the session ID"
                                                    },
                                                    "session_roles": {
                                                        "type": "array",
                                                        "description": "the session role IDs in array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture_url in base profile, and the value in picture_url will be ignored.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. The height and width of crop must be the same (image needs to be square). This parameter is required if your image is not square."
                                        }
                                    }
                                },
                                "link_docs": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "description": "the array of Document IDs",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record updated",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture_url": {
                                            "type": "string",
                                            "description": "the URL of /resource/picture returns after pictures uploaded"
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                                },
                                "groups": {
                                    "type": "array",
                                    "description": "The array of groups",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "group_id": {
                                                "type": "string",
                                                "description": "the unique ID of group"
                                            },
                                            "group_name": {
                                                "type": "string",
                                                "description": "the name of group"
                                            }
                                        }
                                    }
                                },
                                "agenda": {
                                    "type": "object",
                                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "sessions info in array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "session_id": {
                                                        "type": "string",
                                                        "description": "the session ID"
                                                    },
                                                    "session_roles": {
                                                        "type": "array",
                                                        "description": "the session role IDs in array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "the personal agenda with session IDs to attend",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "personal_settings": {
                                    "type": "object",
                                    "description": "'the {config_feature_key:config_value} format JSON object E.g.  {\"direct_messaging\":\"true\", \"offline_email_messaging\": \"true\"}.'\n"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "DELETE person_id",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record deleted",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture_url": {
                                            "type": "string",
                                            "description": "the URL of /resource/picture returns after pictures uploaded"
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                                },
                                "groups": {
                                    "type": "array",
                                    "description": "The array of groups",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "group_id": {
                                                "type": "string",
                                                "description": "the unique ID of group"
                                            },
                                            "group_name": {
                                                "type": "string",
                                                "description": "the name of group"
                                            }
                                        }
                                    }
                                },
                                "agenda": {
                                    "type": "object",
                                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "sessions info in array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "session_id": {
                                                        "type": "string",
                                                        "description": "the session ID"
                                                    },
                                                    "session_roles": {
                                                        "type": "array",
                                                        "description": "the session role IDs in array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "array",
                                            "description": "the personal agenda with session IDs to attend",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "personal_settings": {
                                    "type": "object",
                                    "description": "'the {config_feature_key:config_value} format JSON object E.g.  {\"direct_messaging\":\"true\", \"offline_email_messaging\": \"true\"}.'\n"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/resources/{person_id}/groups": {
            "get": {
                "summary": "Retrieve the groups specific person belongs to",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "List of groups the person belongs to",
                        "schema": {
                            "type": "array",
                            "description": "The array of groups",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "group_id": {
                                        "type": "string",
                                        "description": "the unique ID of group"
                                    },
                                    "group_name": {
                                        "type": "string",
                                        "description": "the name of group"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/resources/{person_id}/groups/{group_id}": {
            "post": {
                "summary": "Add person to a group",
                "description": "Add the Person to the Group. The group_id can be either group name or group ID. If group name has special character, it must be encoded as URL. Body is not needed and will be ignored for this request.\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "the group ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "groups",
                        "in": "query",
                        "description": "filter results by specific Groups. Please use \",\" to seperate multiple items.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The groups person belongs to",
                        "schema": {
                            "type": "array",
                            "description": "The array of groups",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "group_id": {
                                        "type": "string",
                                        "description": "the unique ID of group"
                                    },
                                    "group_name": {
                                        "type": "string",
                                        "description": "the name of group"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The person already belongs to the group.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete person from group",
                "description": "Remove the person from the group. The group_id can be either group name or group ID. If group name has special character, it must be encoded as URL. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "the group ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The groups person belongs to",
                        "schema": {
                            "type": "array",
                            "description": "The array of groups",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "group_id": {
                                        "type": "string",
                                        "description": "the unique ID of group"
                                    },
                                    "group_name": {
                                        "type": "string",
                                        "description": "the name of group"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The person doesn't belong to the group.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/resources/{person_id}/sessions": {
            "get": {
                "summary": "Retrieve the sessions that this person will attend as attendee",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "List of sessions",
                        "schema": {
                            "type": "object",
                            "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                            "properties": {
                                "sessions": {
                                    "type": "array",
                                    "description": "sessions info in array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_id": {
                                                "type": "string",
                                                "description": "the session ID"
                                            },
                                            "session_roles": {
                                                "type": "array",
                                                "description": "the session role IDs in array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a session to specifc person (as attendee)",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "session",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                            "properties": {
                                "sessions": {
                                    "type": "array",
                                    "description": "sessions info in array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_id": {
                                                "type": "string",
                                                "description": "the session ID"
                                            },
                                            "session_roles": {
                                                "type": "array",
                                                "description": "the session role IDs in array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People",
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The sessions person (as attendee) belongs to",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                "properties": {
                                    "sessions": {
                                        "type": "array",
                                        "description": "sessions info in array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "session_id": {
                                                    "type": "string",
                                                    "description": "the session ID"
                                                },
                                                "session_roles": {
                                                    "type": "array",
                                                    "description": "the session role IDs in array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The person already has this session.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/resources/{person_id}/sessions/{session_id}": {
            "delete": {
                "summary": "Delete person from session attendee list",
                "description": "Delete person from session attendee list\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "the session ID (in event schedule).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The sessions person (as attendee) belongs to",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                "properties": {
                                    "sessions": {
                                        "type": "array",
                                        "description": "sessions info in array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "session_id": {
                                                    "type": "string",
                                                    "description": "the session ID"
                                                },
                                                "session_roles": {
                                                    "type": "array",
                                                    "description": "the session role IDs in array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The person doesn't belong to the attendee list.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/groups": {
            "get": {
                "summary": "Get all defined People Groups",
                "description": "This request will return an array of people group details. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The array of groups defined in People",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "The base response model of groups",
                                "properties": {
                                    "group_id": {
                                        "type": "string",
                                        "description": "the unique ID of group"
                                    },
                                    "external_ids": {
                                        "type": "array",
                                        "description": "the external IDs used for integrations",
                                        "items": {
                                            "type": "object",
                                            "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                            "properties": {
                                                "id_system": {
                                                    "type": "string",
                                                    "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                }
                                            }
                                        }
                                    },
                                    "group_type": {
                                        "type": "string",
                                        "description": "for people group, it could be \"attendees\" or \"speakers\" or \"custom\". For other groups, it will be always \"custom\" for now.",
                                        "enum": [
                                            "attendees",
                                            "speakers",
                                            "custom"
                                        ]
                                    },
                                    "group_name": {
                                        "type": "string",
                                        "description": "the unique name of group"
                                    },
                                    "group_color": {
                                        "type": "string",
                                        "format": "#RRGGBB",
                                        "description": "the HEX color code in #RRGGBB"
                                    },
                                    "member_number": {
                                        "type": "number",
                                        "description": "the auto-generated number of members in this group"
                                    },
                                    "timestamps": {
                                        "type": "object",
                                        "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                        "properties": {
                                            "request_datetime": {
                                                "type": "string",
                                                "description": "The time of this API request"
                                            },
                                            "creation_datetime": {
                                                "type": "string",
                                                "description": "the time of object creation"
                                            },
                                            "update_datetime": {
                                                "type": "string",
                                                "description": "the time of last modification"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create new People Group",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "Define new group. group_type will be assigned as \"custom\".",
                            "properties": {
                                "group_name": {
                                    "type": "string",
                                    "description": "the unique name of group"
                                },
                                "group_color": {
                                    "type": "string",
                                    "format": "#RRGGBB",
                                    "description": "the HEX color code in #RRGGBB. If not provided, system will use default color."
                                },
                                "group_note": {
                                    "type": "string",
                                    "description": "the optional note/explaination of this group"
                                },
                                "group_members": {
                                    "type": "array",
                                    "description": "the members to be added to the group. Please provide either id or email.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "member_id": {
                                                "type": "string",
                                                "description": "the ID of people member"
                                            },
                                            "member_email": {
                                                "type": "string",
                                                "description": "the email of people."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The group created",
                        "schema": {
                            "type": "object",
                            "description": "The base response model of groups",
                            "properties": {
                                "group_id": {
                                    "type": "string",
                                    "description": "the unique ID of group"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "group_type": {
                                    "type": "string",
                                    "description": "for people group, it could be \"attendees\" or \"speakers\" or \"custom\". For other groups, it will be always \"custom\" for now.",
                                    "enum": [
                                        "attendees",
                                        "speakers",
                                        "custom"
                                    ]
                                },
                                "group_name": {
                                    "type": "string",
                                    "description": "the unique name of group"
                                },
                                "group_color": {
                                    "type": "string",
                                    "format": "#RRGGBB",
                                    "description": "the HEX color code in #RRGGBB"
                                },
                                "member_number": {
                                    "type": "number",
                                    "description": "the auto-generated number of members in this group"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/groups/{group_id}": {
            "get": {
                "summary": "Get specifc People Group info",
                "description": "This request will return the detail of specific people group. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "the group ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The People Group definition",
                        "schema": {
                            "type": "object",
                            "description": "The base response model of groups",
                            "properties": {
                                "group_id": {
                                    "type": "string",
                                    "description": "the unique ID of group"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "group_type": {
                                    "type": "string",
                                    "description": "for people group, it could be \"attendees\" or \"speakers\" or \"custom\". For other groups, it will be always \"custom\" for now.",
                                    "enum": [
                                        "attendees",
                                        "speakers",
                                        "custom"
                                    ]
                                },
                                "group_name": {
                                    "type": "string",
                                    "description": "the unique name of group"
                                },
                                "group_color": {
                                    "type": "string",
                                    "format": "#RRGGBB",
                                    "description": "the HEX color code in #RRGGBB"
                                },
                                "member_number": {
                                    "type": "number",
                                    "description": "the auto-generated number of members in this group"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete People Group ",
                "description": "This will delete the People Group and remove all members from this group. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "the group ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The group deleted",
                        "schema": {
                            "type": "object",
                            "description": "This is the placeholder"
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/groups/{group_id}/members": {
            "get": {
                "summary": "Get all People inside th group",
                "description": "This request will return basic info of people in the group. This will only include people ID, name, email and timestamp.\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "the group ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The member of people in the specific group.",
                        "schema": {
                            "type": "array",
                            "description": "The basic info of members in people group",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "person_id": {
                                        "type": "string",
                                        "description": "the unique ID of person in people"
                                    },
                                    "external_ids": {
                                        "type": "array",
                                        "description": "the external IDs used for integrations",
                                        "items": {
                                            "type": "object",
                                            "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                            "properties": {
                                                "id_system": {
                                                    "type": "string",
                                                    "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                }
                                            }
                                        }
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "email_address": {
                                        "type": "string"
                                    },
                                    "timestamps": {
                                        "type": "object",
                                        "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                        "properties": {
                                            "request_datetime": {
                                                "type": "string",
                                                "description": "The time of this API request"
                                            },
                                            "creation_datetime": {
                                                "type": "string",
                                                "description": "the time of object creation"
                                            },
                                            "update_datetime": {
                                                "type": "string",
                                                "description": "the time of last modification"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/custom_fields": {
            "get": {
                "summary": "Get all defined Custom Fields",
                "description": "This request will return an array of people custom fields. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Customize"
                ],
                "responses": {
                    "200": {
                        "description": "The array of custom fields defined in People",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "The base custom field model",
                                "properties": {
                                    "custom_field_id": {
                                        "type": "string",
                                        "description": "the unique ID of custom field"
                                    },
                                    "external_ids": {
                                        "type": "array",
                                        "description": "the external IDs used for integrations",
                                        "items": {
                                            "type": "object",
                                            "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                            "properties": {
                                                "id_system": {
                                                    "type": "string",
                                                    "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                }
                                            }
                                        }
                                    },
                                    "field_name": {
                                        "type": "string",
                                        "description": "the field name"
                                    },
                                    "view_permission": {
                                        "type": "string",
                                        "enum": [
                                            "Everyone",
                                            "Organizer and Data Owner",
                                            "Organizer"
                                        ]
                                    },
                                    "edit_permission": {
                                        "type": "string",
                                        "enum": [
                                            "Everyone",
                                            "Organizer and Data Owner",
                                            "Organizer"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sessions": {
            "get": {
                "summary": "GET sessions",
                "description": "This request will return an overview of event schedule, session and track info. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The overview of all session data",
                        "schema": {
                            "type": "object",
                            "description": "The statistics of sessions data",
                            "properties": {
                                "session_number": {
                                    "type": "integer",
                                    "description": "session number in this event. You may use this number for better query pagination."
                                },
                                "track_number": {
                                    "type": "integer",
                                    "description": "the number of groups defined"
                                },
                                "session_role_number": {
                                    "type": "integer",
                                    "description": "the number of session roles fields"
                                },
                                "tracks": {
                                    "type": "array",
                                    "description": "the session groups defined in this event.",
                                    "items": {
                                        "type": "object",
                                        "description": "The base response model of groups",
                                        "properties": {
                                            "group_id": {
                                                "type": "string",
                                                "description": "the unique ID of group"
                                            },
                                            "external_ids": {
                                                "type": "array",
                                                "description": "the external IDs used for integrations",
                                                "items": {
                                                    "type": "object",
                                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                                    "properties": {
                                                        "id_system": {
                                                            "type": "string",
                                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                        }
                                                    }
                                                }
                                            },
                                            "group_type": {
                                                "type": "string",
                                                "description": "for people group, it could be \"attendees\" or \"speakers\" or \"custom\". For other groups, it will be always \"custom\" for now.",
                                                "enum": [
                                                    "attendees",
                                                    "speakers",
                                                    "custom"
                                                ]
                                            },
                                            "group_name": {
                                                "type": "string",
                                                "description": "the unique name of group"
                                            },
                                            "group_color": {
                                                "type": "string",
                                                "format": "#RRGGBB",
                                                "description": "the HEX color code in #RRGGBB"
                                            },
                                            "member_number": {
                                                "type": "number",
                                                "description": "the auto-generated number of members in this group"
                                            },
                                            "timestamps": {
                                                "type": "object",
                                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                                "properties": {
                                                    "request_datetime": {
                                                        "type": "string",
                                                        "description": "The time of this API request"
                                                    },
                                                    "creation_datetime": {
                                                        "type": "string",
                                                        "description": "the time of object creation"
                                                    },
                                                    "update_datetime": {
                                                        "type": "string",
                                                        "description": "the time of last modification"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "sessions_roles": {
                                    "type": "array",
                                    "description": "the roles defined in sessions",
                                    "items": {
                                        "type": "array",
                                        "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "session_role_id": {
                                                    "type": "string",
                                                    "description": "the unique ID for session role"
                                                },
                                                "session_role_name": {
                                                    "type": "string",
                                                    "description": "currently only supports \"Speaker\" and \"Moderator\""
                                                },
                                                "people_list": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "description": "the people IDs assigned to this role"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sessions/resources": {
            "get": {
                "summary": "GET person",
                "description": "This request will return an array of sessions data statistics in specific events. Default paginition is the first 20 records from offset 0. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "filter results by specific IDs. Please use \",\" to seperate multiple items.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limits the number of returned results",
                        "required": false,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Define the offset index of returned results",
                        "required": false,
                        "type": "number",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The array of sessions.",
                        "schema": {
                            "type": "object",
                            "description": "the query of sessions",
                            "properties": {
                                "query_string": {
                                    "type": "string",
                                    "description": "the original query string. Offset and limit parameter will show default value (offset=0&limit=20) if not provided in original request."
                                },
                                "record_number": {
                                    "type": "integer",
                                    "description": "the number of recodes that matches query. If no query filters requested, this will be the total number of people."
                                },
                                "session_list": {
                                    "type": "array",
                                    "description": "the array of sessions",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_id": {
                                                "type": "string",
                                                "description": "the unique session id"
                                            },
                                            "external_ids": {
                                                "type": "array",
                                                "description": "the external IDs used for integrations",
                                                "items": {
                                                    "type": "object",
                                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                                    "properties": {
                                                        "id_system": {
                                                            "type": "string",
                                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                        }
                                                    }
                                                }
                                            },
                                            "session_name": {
                                                "type": "string"
                                            },
                                            "session_description": {
                                                "type": "string",
                                                "description": "the html encoded string. Please ensure the correct gramma."
                                            },
                                            "session_date": {
                                                "type": "string",
                                                "format": "YYYY-MM-DD",
                                                "description": "the session date in YYYY-MM-DD format"
                                            },
                                            "session_start_time": {
                                                "type": "string",
                                                "format": "HH-MM",
                                                "description": "the session start time in HH-MM in 24hour"
                                            },
                                            "session_end_time": {
                                                "type": "string",
                                                "format": "HH-MM",
                                                "description": "the session end time in HH-MM in 24hour"
                                            },
                                            "session_tracks": {
                                                "type": "array",
                                                "description": "the ID of tracks this session belongs to",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "external_links": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "description": "The extra links",
                                                    "properties": {
                                                        "link_name": {
                                                            "type": "string"
                                                        },
                                                        "link_url": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "docs": {
                                                "type": "array",
                                                "description": "the docs linked to the people",
                                                "items": {
                                                    "type": "string",
                                                    "description": "The document ID"
                                                }
                                            },
                                            "session_roles": {
                                                "type": "array",
                                                "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "session_role_id": {
                                                            "type": "string",
                                                            "description": "the unique ID for session role"
                                                        },
                                                        "session_role_name": {
                                                            "type": "string",
                                                            "description": "currently only supports \"Speaker\" and \"Moderator\""
                                                        },
                                                        "people_list": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "description": "the people IDs assigned to this role"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "timestamps": {
                                                "type": "object",
                                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                                "properties": {
                                                    "request_datetime": {
                                                        "type": "string",
                                                        "description": "The time of this API request"
                                                    },
                                                    "creation_datetime": {
                                                        "type": "string",
                                                        "description": "the time of object creation"
                                                    },
                                                    "update_datetime": {
                                                        "type": "string",
                                                        "description": "the time of last modification"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "POST session",
                "description": "Defining a new session\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "session",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_id": {
                                    "type": "string",
                                    "description": "the unique session id"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "session_name": {
                                    "type": "string"
                                },
                                "session_description": {
                                    "type": "string",
                                    "description": "the html encoded string. Please ensure the correct gramma."
                                },
                                "session_date": {
                                    "type": "string",
                                    "format": "YYYY-MM-DD",
                                    "description": "the session date in YYYY-MM-DD format"
                                },
                                "session_start_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session start time in HH-MM in 24hour"
                                },
                                "session_end_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session end time in HH-MM in 24hour"
                                },
                                "speakers": {
                                    "type": "array",
                                    "description": "the people ID as session speakers. External ID supported if request use ext_id_system parameter",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "session_tracks": {
                                    "type": "array",
                                    "description": "the ID of tracks this session belongs to",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "external_links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "The extra links",
                                        "properties": {
                                            "link_name": {
                                                "type": "string"
                                            },
                                            "link_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "session_roles": {
                                    "type": "array",
                                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_role_id": {
                                                "type": "string",
                                                "description": "the unique ID for session role"
                                            },
                                            "session_role_name": {
                                                "type": "string",
                                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                                            },
                                            "people_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "the people IDs assigned to this role"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The session record created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_id": {
                                    "type": "string",
                                    "description": "the unique session id"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "session_name": {
                                    "type": "string"
                                },
                                "session_description": {
                                    "type": "string",
                                    "description": "the html encoded string. Please ensure the correct gramma."
                                },
                                "session_date": {
                                    "type": "string",
                                    "format": "YYYY-MM-DD",
                                    "description": "the session date in YYYY-MM-DD format"
                                },
                                "session_start_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session start time in HH-MM in 24hour"
                                },
                                "session_end_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session end time in HH-MM in 24hour"
                                },
                                "session_tracks": {
                                    "type": "array",
                                    "description": "the ID of tracks this session belongs to",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "external_links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "The extra links",
                                        "properties": {
                                            "link_name": {
                                                "type": "string"
                                            },
                                            "link_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "session_roles": {
                                    "type": "array",
                                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_role_id": {
                                                "type": "string",
                                                "description": "the unique ID for session role"
                                            },
                                            "session_role_name": {
                                                "type": "string",
                                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                                            },
                                            "people_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "the people IDs assigned to this role"
                                                }
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sessions/resources/{session_id}": {
            "get": {
                "summary": "GET session_id",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "the session ID (in event schedule).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The single session record",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_id": {
                                    "type": "string",
                                    "description": "the unique session id"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "session_name": {
                                    "type": "string"
                                },
                                "session_description": {
                                    "type": "string",
                                    "description": "the html encoded string. Please ensure the correct gramma."
                                },
                                "session_date": {
                                    "type": "string",
                                    "format": "YYYY-MM-DD",
                                    "description": "the session date in YYYY-MM-DD format"
                                },
                                "session_start_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session start time in HH-MM in 24hour"
                                },
                                "session_end_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session end time in HH-MM in 24hour"
                                },
                                "session_tracks": {
                                    "type": "array",
                                    "description": "the ID of tracks this session belongs to",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "external_links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "The extra links",
                                        "properties": {
                                            "link_name": {
                                                "type": "string"
                                            },
                                            "link_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "session_roles": {
                                    "type": "array",
                                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_role_id": {
                                                "type": "string",
                                                "description": "the unique ID for session role"
                                            },
                                            "session_role_name": {
                                                "type": "string",
                                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                                            },
                                            "people_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "the people IDs assigned to this role"
                                                }
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "PATCH session_id",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "the session ID (in event schedule).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "session",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_id": {
                                    "type": "string",
                                    "description": "the unique session id"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "session_name": {
                                    "type": "string"
                                },
                                "session_description": {
                                    "type": "string",
                                    "description": "the html encoded string. Please ensure the correct gramma."
                                },
                                "session_date": {
                                    "type": "string",
                                    "format": "YYYY-MM-DD",
                                    "description": "the session date in YYYY-MM-DD format"
                                },
                                "session_start_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session start time in HH-MM in 24hour"
                                },
                                "session_end_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session end time in HH-MM in 24hour"
                                },
                                "speakers": {
                                    "type": "array",
                                    "description": "the people ID as session speakers. External ID supported if request use ext_id_system parameter",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "session_tracks": {
                                    "type": "array",
                                    "description": "the ID of tracks this session belongs to",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "external_links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "The extra links",
                                        "properties": {
                                            "link_name": {
                                                "type": "string"
                                            },
                                            "link_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "session_roles": {
                                    "type": "array",
                                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_role_id": {
                                                "type": "string",
                                                "description": "the unique ID for session role"
                                            },
                                            "session_role_name": {
                                                "type": "string",
                                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                                            },
                                            "people_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "the people IDs assigned to this role"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The session record updated",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_id": {
                                    "type": "string",
                                    "description": "the unique session id"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "session_name": {
                                    "type": "string"
                                },
                                "session_description": {
                                    "type": "string",
                                    "description": "the html encoded string. Please ensure the correct gramma."
                                },
                                "session_date": {
                                    "type": "string",
                                    "format": "YYYY-MM-DD",
                                    "description": "the session date in YYYY-MM-DD format"
                                },
                                "session_start_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session start time in HH-MM in 24hour"
                                },
                                "session_end_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session end time in HH-MM in 24hour"
                                },
                                "session_tracks": {
                                    "type": "array",
                                    "description": "the ID of tracks this session belongs to",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "external_links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "The extra links",
                                        "properties": {
                                            "link_name": {
                                                "type": "string"
                                            },
                                            "link_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "session_roles": {
                                    "type": "array",
                                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_role_id": {
                                                "type": "string",
                                                "description": "the unique ID for session role"
                                            },
                                            "session_role_name": {
                                                "type": "string",
                                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                                            },
                                            "people_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "the people IDs assigned to this role"
                                                }
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "PUT session_id",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "the session ID (in event schedule).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "session",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_id": {
                                    "type": "string",
                                    "description": "the unique session id"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "session_name": {
                                    "type": "string"
                                },
                                "session_description": {
                                    "type": "string",
                                    "description": "the html encoded string. Please ensure the correct gramma."
                                },
                                "session_date": {
                                    "type": "string",
                                    "format": "YYYY-MM-DD",
                                    "description": "the session date in YYYY-MM-DD format"
                                },
                                "session_start_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session start time in HH-MM in 24hour"
                                },
                                "session_end_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session end time in HH-MM in 24hour"
                                },
                                "speakers": {
                                    "type": "array",
                                    "description": "the people ID as session speakers. External ID supported if request use ext_id_system parameter",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "session_tracks": {
                                    "type": "array",
                                    "description": "the ID of tracks this session belongs to",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "external_links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "The extra links",
                                        "properties": {
                                            "link_name": {
                                                "type": "string"
                                            },
                                            "link_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "session_roles": {
                                    "type": "array",
                                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_role_id": {
                                                "type": "string",
                                                "description": "the unique ID for session role"
                                            },
                                            "session_role_name": {
                                                "type": "string",
                                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                                            },
                                            "people_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "the people IDs assigned to this role"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The session record updated",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_id": {
                                    "type": "string",
                                    "description": "the unique session id"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "session_name": {
                                    "type": "string"
                                },
                                "session_description": {
                                    "type": "string",
                                    "description": "the html encoded string. Please ensure the correct gramma."
                                },
                                "session_date": {
                                    "type": "string",
                                    "format": "YYYY-MM-DD",
                                    "description": "the session date in YYYY-MM-DD format"
                                },
                                "session_start_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session start time in HH-MM in 24hour"
                                },
                                "session_end_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session end time in HH-MM in 24hour"
                                },
                                "session_tracks": {
                                    "type": "array",
                                    "description": "the ID of tracks this session belongs to",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "external_links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "The extra links",
                                        "properties": {
                                            "link_name": {
                                                "type": "string"
                                            },
                                            "link_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "session_roles": {
                                    "type": "array",
                                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_role_id": {
                                                "type": "string",
                                                "description": "the unique ID for session role"
                                            },
                                            "session_role_name": {
                                                "type": "string",
                                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                                            },
                                            "people_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "the people IDs assigned to this role"
                                                }
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "DELETE session_id",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "the session ID (in event schedule).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The session record that successfully deleted.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_id": {
                                    "type": "string",
                                    "description": "the unique session id"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "session_name": {
                                    "type": "string"
                                },
                                "session_description": {
                                    "type": "string",
                                    "description": "the html encoded string. Please ensure the correct gramma."
                                },
                                "session_date": {
                                    "type": "string",
                                    "format": "YYYY-MM-DD",
                                    "description": "the session date in YYYY-MM-DD format"
                                },
                                "session_start_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session start time in HH-MM in 24hour"
                                },
                                "session_end_time": {
                                    "type": "string",
                                    "format": "HH-MM",
                                    "description": "the session end time in HH-MM in 24hour"
                                },
                                "session_tracks": {
                                    "type": "array",
                                    "description": "the ID of tracks this session belongs to",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "external_links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "The extra links",
                                        "properties": {
                                            "link_name": {
                                                "type": "string"
                                            },
                                            "link_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "session_roles": {
                                    "type": "array",
                                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "session_role_id": {
                                                "type": "string",
                                                "description": "the unique ID for session role"
                                            },
                                            "session_role_name": {
                                                "type": "string",
                                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                                            },
                                            "people_list": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "description": "the people IDs assigned to this role"
                                                }
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sessions/resources/{session_id}/attendees": {
            "get": {
                "summary": "Retrieve the attendees of specific session",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "the session ID (in event schedule).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "List of attendees",
                        "schema": {
                            "type": "object",
                            "description": "This is the placeholder"
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sessions/resources/{session_id}/attendees/{person_id}": {
            "post": {
                "summary": "Add an attendee to specifc session",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "the session ID (in event schedule).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "The attendees",
                        "schema": {
                            "type": "object",
                            "description": "This is the placeholder"
                        }
                    },
                    "409": {
                        "description": "The attendee people is already in the session.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete person from session attendee list",
                "description": "Delete person from session attendee list\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "the session ID (in event schedule).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "People",
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "Success deleted"
                    },
                    "404": {
                        "description": "The attendee people doesn't belong to the session.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sessions/tracks": {
            "get": {
                "summary": "Get all defined Session Tracks",
                "description": "This request will return an array of session track details. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Session",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The array of tracks defined in Sessions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "The track info in response",
                                "properties": {
                                    "track_id": {
                                        "type": "string",
                                        "description": "the unique ID of track"
                                    },
                                    "external_ids": {
                                        "type": "array",
                                        "description": "the external IDs used for integrations",
                                        "items": {
                                            "type": "object",
                                            "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                            "properties": {
                                                "id_system": {
                                                    "type": "string",
                                                    "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                }
                                            }
                                        }
                                    },
                                    "track_name": {
                                        "type": "string",
                                        "description": "the unique name of track"
                                    },
                                    "track_color": {
                                        "type": "string",
                                        "format": "#RRGGBB",
                                        "description": "the HEX color code in #RRGGBB"
                                    },
                                    "track_session_number": {
                                        "type": "number",
                                        "description": "the auto-generated number of members in this track"
                                    },
                                    "timestamps": {
                                        "type": "object",
                                        "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                        "properties": {
                                            "request_datetime": {
                                                "type": "string",
                                                "description": "The time of this API request"
                                            },
                                            "creation_datetime": {
                                                "type": "string",
                                                "description": "the time of object creation"
                                            },
                                            "update_datetime": {
                                                "type": "string",
                                                "description": "the time of last modification"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create new session track",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "track",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "This is the placeholder"
                        }
                    }
                ],
                "tags": [
                    "Session",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The session track created",
                        "schema": {
                            "type": "object",
                            "description": "The track info in response",
                            "properties": {
                                "track_id": {
                                    "type": "string",
                                    "description": "the unique ID of track"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "track_name": {
                                    "type": "string",
                                    "description": "the unique name of track"
                                },
                                "track_color": {
                                    "type": "string",
                                    "format": "#RRGGBB",
                                    "description": "the HEX color code in #RRGGBB"
                                },
                                "track_session_number": {
                                    "type": "number",
                                    "description": "the auto-generated number of members in this track"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sessions/tracks/{track_id}": {
            "get": {
                "summary": "Get specifc Session Track info",
                "description": "This request will return the detail of specific session track. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "track_id",
                        "in": "path",
                        "description": "the track ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Session",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The Session Track definition",
                        "schema": {
                            "type": "object",
                            "description": "The track info in response",
                            "properties": {
                                "track_id": {
                                    "type": "string",
                                    "description": "the unique ID of track"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                            }
                                        }
                                    }
                                },
                                "track_name": {
                                    "type": "string",
                                    "description": "the unique name of track"
                                },
                                "track_color": {
                                    "type": "string",
                                    "format": "#RRGGBB",
                                    "description": "the HEX color code in #RRGGBB"
                                },
                                "track_session_number": {
                                    "type": "number",
                                    "description": "the auto-generated number of members in this track"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Session Track",
                "description": "This will delete the Session Track and remove all sessions from this track. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "track_id",
                        "in": "path",
                        "description": "the track ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Session",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The track deleted",
                        "schema": {
                            "type": "object",
                            "description": "This is the placeholder"
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sessions/tracks/{track_id}/list": {
            "get": {
                "summary": "Get all sessions in the track",
                "description": "This request will return basic info of sessions in the track. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "track_id",
                        "in": "path",
                        "description": "the track ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Session",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "The list of sessions in the specific track.",
                        "schema": {
                            "type": "object",
                            "description": "This is the placeholder"
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sessions/custom_fields": {
            "get": {
                "summary": "Get all defined Custom Fields",
                "description": "This request will return an array of people custom fields. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Session",
                    "Customize"
                ],
                "responses": {
                    "200": {
                        "description": "The array of custom fields defined in People",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "The base custom field model",
                                "properties": {
                                    "custom_field_id": {
                                        "type": "string",
                                        "description": "the unique ID of custom field"
                                    },
                                    "external_ids": {
                                        "type": "array",
                                        "description": "the external IDs used for integrations",
                                        "items": {
                                            "type": "object",
                                            "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                            "properties": {
                                                "id_system": {
                                                    "type": "string",
                                                    "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                                }
                                            }
                                        }
                                    },
                                    "field_name": {
                                        "type": "string",
                                        "description": "the field name"
                                    },
                                    "view_permission": {
                                        "type": "string",
                                        "enum": [
                                            "Everyone",
                                            "Organizer and Data Owner",
                                            "Organizer"
                                        ]
                                    },
                                    "edit_permission": {
                                        "type": "string",
                                        "enum": [
                                            "Everyone",
                                            "Organizer and Data Owner",
                                            "Organizer"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/event/{event_id}/resources/pictures": {
            "get": {
                "summary": "Get the info of pictures uploaded for specific event",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Resource"
                ],
                "responses": {
                    "200": {
                        "description": "the array of picture info",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "the info of the resources uploaded. Event documents are not in this list.",
                                "properties": {
                                    "resource_id": {
                                        "type": "string",
                                        "description": "the UUID of resource"
                                    },
                                    "resource_type": {
                                        "type": "string",
                                        "enum": [
                                            "picture"
                                        ]
                                    },
                                    "filename": {
                                        "type": "string",
                                        "description": "the filename use for person profile photo, company logo, etc."
                                    },
                                    "url": {
                                        "type": "string",
                                        "description": "the encoded URL to access resource"
                                    },
                                    "upload_filename": {
                                        "type": "string",
                                        "description": "the original filename before renaming or processing"
                                    },
                                    "upload_request": {
                                        "type": "string",
                                        "description": "if upload with request with upload_picture parameter in People/Companies/etc., this will be the API call path"
                                    },
                                    "timestamps": {
                                        "type": "object",
                                        "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                        "properties": {
                                            "request_datetime": {
                                                "type": "string",
                                                "description": "The time of this API request"
                                            },
                                            "creation_datetime": {
                                                "type": "string",
                                                "description": "the time of object creation"
                                            },
                                            "update_datetime": {
                                                "type": "string",
                                                "description": "the time of last modification"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Upload new picture resource.",
                "description": "In person profile or company logo, this uploaded picture can be used with the response filename (not url).\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resource",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "please provide the resource type and choose the resource info below.",
                            "properties": {
                                "resource_type": {
                                    "type": "string",
                                    "enum": [
                                        "picture"
                                    ]
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture_url in base profile, and the value in picture_url will be ignored.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. The height and width of crop must be the same (image needs to be square). This parameter is required if your image is not square."
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Resource"
                ],
                "responses": {
                    "200": {
                        "description": "the uploaded picture",
                        "schema": {
                            "type": "object",
                            "description": "the info of the resources uploaded. Event documents are not in this list.",
                            "properties": {
                                "resource_id": {
                                    "type": "string",
                                    "description": "the UUID of resource"
                                },
                                "resource_type": {
                                    "type": "string",
                                    "enum": [
                                        "picture"
                                    ]
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "the filename use for person profile photo, company logo, etc."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "the encoded URL to access resource"
                                },
                                "upload_filename": {
                                    "type": "string",
                                    "description": "the original filename before renaming or processing"
                                },
                                "upload_request": {
                                    "type": "string",
                                    "description": "if upload with request with upload_picture parameter in People/Companies/etc., this will be the API call path"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/event/{event_id}/resources/pictures/{resource_id}": {
            "get": {
                "summary": "Get the info of specifc picture uploaded",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resource_id",
                        "in": "path",
                        "description": "the resource ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Resource"
                ],
                "responses": {
                    "200": {
                        "description": "the uploaded picture info",
                        "schema": {
                            "type": "object",
                            "description": "the info of the resources uploaded. Event documents are not in this list.",
                            "properties": {
                                "resource_id": {
                                    "type": "string",
                                    "description": "the UUID of resource"
                                },
                                "resource_type": {
                                    "type": "string",
                                    "enum": [
                                        "picture"
                                    ]
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "the filename use for person profile photo, company logo, etc."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "the encoded URL to access resource"
                                },
                                "upload_filename": {
                                    "type": "string",
                                    "description": "the original filename before renaming or processing"
                                },
                                "upload_request": {
                                    "type": "string",
                                    "description": "if upload with request with upload_picture parameter in People/Companies/etc., this will be the API call path"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "replace the uploaded picture with the same filename",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "header",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resource_id",
                        "in": "path",
                        "description": "the resource ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resource",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "please provide the resource type and choose the resource info below.",
                            "properties": {
                                "resource_type": {
                                    "type": "string",
                                    "enum": [
                                        "picture"
                                    ]
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture_url in base profile, and the value in picture_url will be ignored.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. The height and width of crop must be the same (image needs to be square). This parameter is required if your image is not square."
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Resource"
                ],
                "responses": {
                    "200": {
                        "description": "the updated picture info",
                        "schema": {
                            "type": "object",
                            "description": "the info of the resources uploaded. Event documents are not in this list.",
                            "properties": {
                                "resource_id": {
                                    "type": "string",
                                    "description": "the UUID of resource"
                                },
                                "resource_type": {
                                    "type": "string",
                                    "enum": [
                                        "picture"
                                    ]
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "the filename use for person profile photo, company logo, etc."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "the encoded URL to access resource"
                                },
                                "upload_filename": {
                                    "type": "string",
                                    "description": "the original filename before renaming or processing"
                                },
                                "upload_request": {
                                    "type": "string",
                                    "description": "if upload with request with upload_picture parameter in People/Companies/etc., this will be the API call path"
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_datetime": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_datetime": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_datetime": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "PeopleOverview": {
            "type": "object",
            "description": "The statistics of people data",
            "properties": {
                "people_number": {
                    "type": "integer",
                    "description": "people number in this event. You may use this number for better query pagination."
                },
                "group_number": {
                    "type": "integer",
                    "description": "the number of groups defined"
                },
                "custom_field_number": {
                    "type": "integer",
                    "description": "the number of custom fields"
                },
                "groups": {
                    "type": "array",
                    "description": "the groups defined in this event.",
                    "items": {
                        "type": "object",
                        "description": "The base response model of groups",
                        "properties": {
                            "group_id": {
                                "type": "string",
                                "description": "the unique ID of group"
                            },
                            "external_ids": {
                                "type": "array",
                                "description": "the external IDs used for integrations",
                                "items": {
                                    "type": "object",
                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                    "properties": {
                                        "id_system": {
                                            "type": "string",
                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                        }
                                    }
                                }
                            },
                            "group_type": {
                                "type": "string",
                                "description": "for people group, it could be \"attendees\" or \"speakers\" or \"custom\". For other groups, it will be always \"custom\" for now.",
                                "enum": [
                                    "attendees",
                                    "speakers",
                                    "custom"
                                ]
                            },
                            "group_name": {
                                "type": "string",
                                "description": "the unique name of group"
                            },
                            "group_color": {
                                "type": "string",
                                "format": "#RRGGBB",
                                "description": "the HEX color code in #RRGGBB"
                            },
                            "member_number": {
                                "type": "number",
                                "description": "the auto-generated number of members in this group"
                            },
                            "timestamps": {
                                "type": "object",
                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                "properties": {
                                    "request_datetime": {
                                        "type": "string",
                                        "description": "The time of this API request"
                                    },
                                    "creation_datetime": {
                                        "type": "string",
                                        "description": "the time of object creation"
                                    },
                                    "update_datetime": {
                                        "type": "string",
                                        "description": "the time of last modification"
                                    }
                                }
                            }
                        }
                    }
                },
                "custom_fields": {
                    "type": "array",
                    "description": "the custom fields defined in this event",
                    "items": {
                        "type": "object",
                        "description": "The base custom field model",
                        "properties": {
                            "custom_field_id": {
                                "type": "string",
                                "description": "the unique ID of custom field"
                            },
                            "external_ids": {
                                "type": "array",
                                "description": "the external IDs used for integrations",
                                "items": {
                                    "type": "object",
                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                    "properties": {
                                        "id_system": {
                                            "type": "string",
                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                        }
                                    }
                                }
                            },
                            "field_name": {
                                "type": "string",
                                "description": "the field name"
                            },
                            "view_permission": {
                                "type": "string",
                                "enum": [
                                    "Everyone",
                                    "Organizer and Data Owner",
                                    "Organizer"
                                ]
                            },
                            "edit_permission": {
                                "type": "string",
                                "enum": [
                                    "Everyone",
                                    "Organizer and Data Owner",
                                    "Organizer"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "PeopleRecordsResponse": {
            "type": "object",
            "description": "the query of people",
            "properties": {
                "query_string": {
                    "type": "string",
                    "description": "the original query string. Offset and limit parameter will show default value (offset=0&limit=20) if not provided in original request."
                },
                "record_number": {
                    "type": "integer",
                    "description": "the number of recodes that matches query. If no query filters requested, this will be the total number of people."
                },
                "people_list": {
                    "type": "array",
                    "description": "the array of people",
                    "items": {
                        "type": "object",
                        "description": "the single person record",
                        "properties": {
                            "person_id": {
                                "type": "string",
                                "description": "the unique ID of person in people"
                            },
                            "external_ids": {
                                "type": "array",
                                "description": "the external IDs used for integrations",
                                "items": {
                                    "type": "object",
                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                    "properties": {
                                        "id_system": {
                                            "type": "string",
                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                        }
                                    }
                                }
                            },
                            "profile": {
                                "type": "object",
                                "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "email_address": {
                                        "type": "string"
                                    },
                                    "picture_url": {
                                        "type": "string",
                                        "description": "the URL of /resource/picture returns after pictures uploaded"
                                    },
                                    "company": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "about": {
                                        "type": "string"
                                    },
                                    "social_contacts": {
                                        "type": "object",
                                        "description": "The general contact info record",
                                        "properties": {
                                            "twitter_url": {
                                                "type": "string"
                                            },
                                            "facebook_url": {
                                                "type": "string"
                                            },
                                            "linkedin_url": {
                                                "type": "string"
                                            },
                                            "website_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "custom_fields_meta": {
                                "type": "object",
                                "description": "the {custom_field_id:custom_field_value} format JSON object"
                            },
                            "groups": {
                                "type": "array",
                                "description": "The array of groups",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "group_id": {
                                            "type": "string",
                                            "description": "the unique ID of group"
                                        },
                                        "group_name": {
                                            "type": "string",
                                            "description": "the name of group"
                                        }
                                    }
                                }
                            },
                            "agenda": {
                                "type": "object",
                                "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                                "properties": {
                                    "sessions": {
                                        "type": "array",
                                        "description": "sessions info in array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "session_id": {
                                                    "type": "string",
                                                    "description": "the session ID"
                                                },
                                                "session_roles": {
                                                    "type": "array",
                                                    "description": "the session role IDs in array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "favorite_data": {
                                "type": "object",
                                "properties": {
                                    "sessions": {
                                        "type": "array",
                                        "description": "the personal agenda with session IDs to attend",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "companies": {
                                        "type": "object"
                                    },
                                    "docs": {
                                        "type": "object"
                                    }
                                }
                            },
                            "docs": {
                                "type": "array",
                                "description": "the docs linked to the people",
                                "items": {
                                    "type": "string",
                                    "description": "The document ID"
                                }
                            },
                            "personal_settings": {
                                "type": "object",
                                "description": "'the {config_feature_key:config_value} format JSON object E.g.  {\"direct_messaging\":\"true\", \"offline_email_messaging\": \"true\"}.'\n"
                            },
                            "timestamps": {
                                "type": "object",
                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                "properties": {
                                    "request_datetime": {
                                        "type": "string",
                                        "description": "The time of this API request"
                                    },
                                    "creation_datetime": {
                                        "type": "string",
                                        "description": "the time of object creation"
                                    },
                                    "update_datetime": {
                                        "type": "string",
                                        "description": "the time of last modification"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "PersonObjectRequest": {
            "type": "object",
            "description": "the single person record",
            "properties": {
                "person_id": {
                    "type": "string",
                    "description": "the unique ID of person in people"
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                            }
                        }
                    }
                },
                "profile": {
                    "type": "object",
                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                    "properties": {
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "email_address": {
                            "type": "string"
                        },
                        "picture_resource_id": {
                            "type": "string",
                            "description": "the resource ID of pictures uploaded"
                        },
                        "company": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "about": {
                            "type": "string"
                        },
                        "social_contacts": {
                            "type": "object",
                            "description": "The general contact info record",
                            "properties": {
                                "twitter_url": {
                                    "type": "string"
                                },
                                "facebook_url": {
                                    "type": "string"
                                },
                                "linkedin_url": {
                                    "type": "string"
                                },
                                "website_url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "custom_fields_meta": {
                    "type": "object",
                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                },
                "assign_groups": {
                    "type": "array",
                    "description": "the array of group IDs",
                    "items": {
                        "type": "string"
                    }
                },
                "assign_agenda": {
                    "type": "object",
                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                    "properties": {
                        "sessions": {
                            "type": "array",
                            "description": "sessions info in array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "session_id": {
                                        "type": "string",
                                        "description": "the session ID"
                                    },
                                    "session_roles": {
                                        "type": "array",
                                        "description": "the session role IDs in array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "upload_picture": {
                    "type": "object",
                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture_url in base profile, and the value in picture_url will be ignored.",
                    "properties": {
                        "url": {
                            "type": "string",
                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                        },
                        "trim": {
                            "type": "string",
                            "format": "AxB:CxD",
                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. The height and width of crop must be the same (image needs to be square). This parameter is required if your image is not square."
                        }
                    }
                },
                "link_docs": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "description": "the array of Document IDs",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "PersonObjectResponse": {
            "type": "object",
            "description": "the single person record",
            "properties": {
                "person_id": {
                    "type": "string",
                    "description": "the unique ID of person in people"
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                            }
                        }
                    }
                },
                "profile": {
                    "type": "object",
                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                    "properties": {
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "email_address": {
                            "type": "string"
                        },
                        "picture_url": {
                            "type": "string",
                            "description": "the URL of /resource/picture returns after pictures uploaded"
                        },
                        "company": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "about": {
                            "type": "string"
                        },
                        "social_contacts": {
                            "type": "object",
                            "description": "The general contact info record",
                            "properties": {
                                "twitter_url": {
                                    "type": "string"
                                },
                                "facebook_url": {
                                    "type": "string"
                                },
                                "linkedin_url": {
                                    "type": "string"
                                },
                                "website_url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "custom_fields_meta": {
                    "type": "object",
                    "description": "the {custom_field_id:custom_field_value} format JSON object"
                },
                "groups": {
                    "type": "array",
                    "description": "The array of groups",
                    "items": {
                        "type": "object",
                        "properties": {
                            "group_id": {
                                "type": "string",
                                "description": "the unique ID of group"
                            },
                            "group_name": {
                                "type": "string",
                                "description": "the name of group"
                            }
                        }
                    }
                },
                "agenda": {
                    "type": "object",
                    "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
                    "properties": {
                        "sessions": {
                            "type": "array",
                            "description": "sessions info in array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "session_id": {
                                        "type": "string",
                                        "description": "the session ID"
                                    },
                                    "session_roles": {
                                        "type": "array",
                                        "description": "the session role IDs in array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "favorite_data": {
                    "type": "object",
                    "properties": {
                        "sessions": {
                            "type": "array",
                            "description": "the personal agenda with session IDs to attend",
                            "items": {
                                "type": "string"
                            }
                        },
                        "companies": {
                            "type": "object"
                        },
                        "docs": {
                            "type": "object"
                        }
                    }
                },
                "docs": {
                    "type": "array",
                    "description": "the docs linked to the people",
                    "items": {
                        "type": "string",
                        "description": "The document ID"
                    }
                },
                "personal_settings": {
                    "type": "object",
                    "description": "'the {config_feature_key:config_value} format JSON object E.g.  {\"direct_messaging\":\"true\", \"offline_email_messaging\": \"true\"}.'\n"
                },
                "timestamps": {
                    "type": "object",
                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                    "properties": {
                        "request_datetime": {
                            "type": "string",
                            "description": "The time of this API request"
                        },
                        "creation_datetime": {
                            "type": "string",
                            "description": "the time of object creation"
                        },
                        "update_datetime": {
                            "type": "string",
                            "description": "the time of last modification"
                        }
                    }
                }
            }
        },
        "PersonProfileRequest": {
            "type": "object",
            "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "picture_resource_id": {
                    "type": "string",
                    "description": "the resource ID of pictures uploaded"
                },
                "company": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "social_contacts": {
                    "type": "object",
                    "description": "The general contact info record",
                    "properties": {
                        "twitter_url": {
                            "type": "string"
                        },
                        "facebook_url": {
                            "type": "string"
                        },
                        "linkedin_url": {
                            "type": "string"
                        },
                        "website_url": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "PersonProfileResponse": {
            "type": "object",
            "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "picture_url": {
                    "type": "string",
                    "description": "the URL of /resource/picture returns after pictures uploaded"
                },
                "company": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "social_contacts": {
                    "type": "object",
                    "description": "The general contact info record",
                    "properties": {
                        "twitter_url": {
                            "type": "string"
                        },
                        "facebook_url": {
                            "type": "string"
                        },
                        "linkedin_url": {
                            "type": "string"
                        },
                        "website_url": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "SessionsOverview": {
            "type": "object",
            "description": "The statistics of sessions data",
            "properties": {
                "session_number": {
                    "type": "integer",
                    "description": "session number in this event. You may use this number for better query pagination."
                },
                "track_number": {
                    "type": "integer",
                    "description": "the number of groups defined"
                },
                "session_role_number": {
                    "type": "integer",
                    "description": "the number of session roles fields"
                },
                "tracks": {
                    "type": "array",
                    "description": "the session groups defined in this event.",
                    "items": {
                        "type": "object",
                        "description": "The base response model of groups",
                        "properties": {
                            "group_id": {
                                "type": "string",
                                "description": "the unique ID of group"
                            },
                            "external_ids": {
                                "type": "array",
                                "description": "the external IDs used for integrations",
                                "items": {
                                    "type": "object",
                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                    "properties": {
                                        "id_system": {
                                            "type": "string",
                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                        }
                                    }
                                }
                            },
                            "group_type": {
                                "type": "string",
                                "description": "for people group, it could be \"attendees\" or \"speakers\" or \"custom\". For other groups, it will be always \"custom\" for now.",
                                "enum": [
                                    "attendees",
                                    "speakers",
                                    "custom"
                                ]
                            },
                            "group_name": {
                                "type": "string",
                                "description": "the unique name of group"
                            },
                            "group_color": {
                                "type": "string",
                                "format": "#RRGGBB",
                                "description": "the HEX color code in #RRGGBB"
                            },
                            "member_number": {
                                "type": "number",
                                "description": "the auto-generated number of members in this group"
                            },
                            "timestamps": {
                                "type": "object",
                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                "properties": {
                                    "request_datetime": {
                                        "type": "string",
                                        "description": "The time of this API request"
                                    },
                                    "creation_datetime": {
                                        "type": "string",
                                        "description": "the time of object creation"
                                    },
                                    "update_datetime": {
                                        "type": "string",
                                        "description": "the time of last modification"
                                    }
                                }
                            }
                        }
                    }
                },
                "sessions_roles": {
                    "type": "array",
                    "description": "the roles defined in sessions",
                    "items": {
                        "type": "array",
                        "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                        "items": {
                            "type": "object",
                            "properties": {
                                "session_role_id": {
                                    "type": "string",
                                    "description": "the unique ID for session role"
                                },
                                "session_role_name": {
                                    "type": "string",
                                    "description": "currently only supports \"Speaker\" and \"Moderator\""
                                },
                                "people_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "description": "the people IDs assigned to this role"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "SessionRecordsResponse": {
            "type": "object",
            "description": "the query of sessions",
            "properties": {
                "query_string": {
                    "type": "string",
                    "description": "the original query string. Offset and limit parameter will show default value (offset=0&limit=20) if not provided in original request."
                },
                "record_number": {
                    "type": "integer",
                    "description": "the number of recodes that matches query. If no query filters requested, this will be the total number of people."
                },
                "session_list": {
                    "type": "array",
                    "description": "the array of sessions",
                    "items": {
                        "type": "object",
                        "properties": {
                            "session_id": {
                                "type": "string",
                                "description": "the unique session id"
                            },
                            "external_ids": {
                                "type": "array",
                                "description": "the external IDs used for integrations",
                                "items": {
                                    "type": "object",
                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                    "properties": {
                                        "id_system": {
                                            "type": "string",
                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                        }
                                    }
                                }
                            },
                            "session_name": {
                                "type": "string"
                            },
                            "session_description": {
                                "type": "string",
                                "description": "the html encoded string. Please ensure the correct gramma."
                            },
                            "session_date": {
                                "type": "string",
                                "format": "YYYY-MM-DD",
                                "description": "the session date in YYYY-MM-DD format"
                            },
                            "session_start_time": {
                                "type": "string",
                                "format": "HH-MM",
                                "description": "the session start time in HH-MM in 24hour"
                            },
                            "session_end_time": {
                                "type": "string",
                                "format": "HH-MM",
                                "description": "the session end time in HH-MM in 24hour"
                            },
                            "session_tracks": {
                                "type": "array",
                                "description": "the ID of tracks this session belongs to",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "external_links": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "description": "The extra links",
                                    "properties": {
                                        "link_name": {
                                            "type": "string"
                                        },
                                        "link_url": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "docs": {
                                "type": "array",
                                "description": "the docs linked to the people",
                                "items": {
                                    "type": "string",
                                    "description": "The document ID"
                                }
                            },
                            "session_roles": {
                                "type": "array",
                                "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "session_role_id": {
                                            "type": "string",
                                            "description": "the unique ID for session role"
                                        },
                                        "session_role_name": {
                                            "type": "string",
                                            "description": "currently only supports \"Speaker\" and \"Moderator\""
                                        },
                                        "people_list": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the people IDs assigned to this role"
                                            }
                                        }
                                    }
                                }
                            },
                            "timestamps": {
                                "type": "object",
                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                "properties": {
                                    "request_datetime": {
                                        "type": "string",
                                        "description": "The time of this API request"
                                    },
                                    "creation_datetime": {
                                        "type": "string",
                                        "description": "the time of object creation"
                                    },
                                    "update_datetime": {
                                        "type": "string",
                                        "description": "the time of last modification"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "SessionObjectRequest": {
            "type": "object",
            "properties": {
                "session_id": {
                    "type": "string",
                    "description": "the unique session id"
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                            }
                        }
                    }
                },
                "session_name": {
                    "type": "string"
                },
                "session_description": {
                    "type": "string",
                    "description": "the html encoded string. Please ensure the correct gramma."
                },
                "session_date": {
                    "type": "string",
                    "format": "YYYY-MM-DD",
                    "description": "the session date in YYYY-MM-DD format"
                },
                "session_start_time": {
                    "type": "string",
                    "format": "HH-MM",
                    "description": "the session start time in HH-MM in 24hour"
                },
                "session_end_time": {
                    "type": "string",
                    "format": "HH-MM",
                    "description": "the session end time in HH-MM in 24hour"
                },
                "speakers": {
                    "type": "array",
                    "description": "the people ID as session speakers. External ID supported if request use ext_id_system parameter",
                    "items": {
                        "type": "string"
                    }
                },
                "session_tracks": {
                    "type": "array",
                    "description": "the ID of tracks this session belongs to",
                    "items": {
                        "type": "string"
                    }
                },
                "external_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "The extra links",
                        "properties": {
                            "link_name": {
                                "type": "string"
                            },
                            "link_url": {
                                "type": "string"
                            }
                        }
                    }
                },
                "docs": {
                    "type": "array",
                    "description": "the docs linked to the people",
                    "items": {
                        "type": "string",
                        "description": "The document ID"
                    }
                },
                "session_roles": {
                    "type": "array",
                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "session_role_id": {
                                "type": "string",
                                "description": "the unique ID for session role"
                            },
                            "session_role_name": {
                                "type": "string",
                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                            },
                            "people_list": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "the people IDs assigned to this role"
                                }
                            }
                        }
                    }
                }
            }
        },
        "SessionObjectResponse": {
            "type": "object",
            "properties": {
                "session_id": {
                    "type": "string",
                    "description": "the unique session id"
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                            }
                        }
                    }
                },
                "session_name": {
                    "type": "string"
                },
                "session_description": {
                    "type": "string",
                    "description": "the html encoded string. Please ensure the correct gramma."
                },
                "session_date": {
                    "type": "string",
                    "format": "YYYY-MM-DD",
                    "description": "the session date in YYYY-MM-DD format"
                },
                "session_start_time": {
                    "type": "string",
                    "format": "HH-MM",
                    "description": "the session start time in HH-MM in 24hour"
                },
                "session_end_time": {
                    "type": "string",
                    "format": "HH-MM",
                    "description": "the session end time in HH-MM in 24hour"
                },
                "session_tracks": {
                    "type": "array",
                    "description": "the ID of tracks this session belongs to",
                    "items": {
                        "type": "string"
                    }
                },
                "external_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "The extra links",
                        "properties": {
                            "link_name": {
                                "type": "string"
                            },
                            "link_url": {
                                "type": "string"
                            }
                        }
                    }
                },
                "docs": {
                    "type": "array",
                    "description": "the docs linked to the people",
                    "items": {
                        "type": "string",
                        "description": "The document ID"
                    }
                },
                "session_roles": {
                    "type": "array",
                    "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
                    "items": {
                        "type": "object",
                        "properties": {
                            "session_role_id": {
                                "type": "string",
                                "description": "the unique ID for session role"
                            },
                            "session_role_name": {
                                "type": "string",
                                "description": "currently only supports \"Speaker\" and \"Moderator\""
                            },
                            "people_list": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "the people IDs assigned to this role"
                                }
                            }
                        }
                    }
                },
                "timestamps": {
                    "type": "object",
                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                    "properties": {
                        "request_datetime": {
                            "type": "string",
                            "description": "The time of this API request"
                        },
                        "creation_datetime": {
                            "type": "string",
                            "description": "the time of object creation"
                        },
                        "update_datetime": {
                            "type": "string",
                            "description": "the time of last modification"
                        }
                    }
                }
            }
        },
        "ResourceRequest": {
            "type": "object",
            "description": "please provide the resource type and choose the resource info below.",
            "properties": {
                "resource_type": {
                    "type": "string",
                    "enum": [
                        "picture"
                    ]
                },
                "upload_picture": {
                    "type": "object",
                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture_url in base profile, and the value in picture_url will be ignored.",
                    "properties": {
                        "url": {
                            "type": "string",
                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                        },
                        "trim": {
                            "type": "string",
                            "format": "AxB:CxD",
                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. The height and width of crop must be the same (image needs to be square). This parameter is required if your image is not square."
                        }
                    }
                }
            }
        },
        "ResourceResponse": {
            "type": "object",
            "description": "the info of the resources uploaded. Event documents are not in this list.",
            "properties": {
                "resource_id": {
                    "type": "string",
                    "description": "the UUID of resource"
                },
                "resource_type": {
                    "type": "string",
                    "enum": [
                        "picture"
                    ]
                },
                "filename": {
                    "type": "string",
                    "description": "the filename use for person profile photo, company logo, etc."
                },
                "url": {
                    "type": "string",
                    "description": "the encoded URL to access resource"
                },
                "upload_filename": {
                    "type": "string",
                    "description": "the original filename before renaming or processing"
                },
                "upload_request": {
                    "type": "string",
                    "description": "if upload with request with upload_picture parameter in People/Companies/etc., this will be the API call path"
                },
                "timestamps": {
                    "type": "object",
                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                    "properties": {
                        "request_datetime": {
                            "type": "string",
                            "description": "The time of this API request"
                        },
                        "creation_datetime": {
                            "type": "string",
                            "description": "the time of object creation"
                        },
                        "update_datetime": {
                            "type": "string",
                            "description": "the time of last modification"
                        }
                    }
                }
            }
        },
        "IDs": {
            "type": "object",
            "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
            "properties": {
                "id_system": {
                    "type": "string",
                    "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                },
                "id": {
                    "type": "string",
                    "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                }
            }
        },
        "DocLink": {
            "type": "string",
            "description": "The document ID"
        },
        "URLLink": {
            "type": "object",
            "description": "The extra links",
            "properties": {
                "link_name": {
                    "type": "string"
                },
                "link_url": {
                    "type": "string"
                }
            }
        },
        "RequestUploadAssociateDoc": {
            "type": "array",
            "description": "the array of Document IDs",
            "items": {
                "type": "string"
            }
        },
        "RequestUploadAssociatePicture": {
            "type": "object",
            "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture_url in base profile, and the value in picture_url will be ignored.",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                },
                "trim": {
                    "type": "string",
                    "format": "AxB:CxD",
                    "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. The height and width of crop must be the same (image needs to be square). This parameter is required if your image is not square."
                }
            }
        },
        "SocialContactInfo": {
            "type": "object",
            "description": "The general contact info record",
            "properties": {
                "twitter_url": {
                    "type": "string"
                },
                "facebook_url": {
                    "type": "string"
                },
                "linkedin_url": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "ResponseGeneralCustomFields": {
            "type": "object",
            "description": "The base custom field model",
            "properties": {
                "custom_field_id": {
                    "type": "string",
                    "description": "the unique ID of custom field"
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                            }
                        }
                    }
                },
                "field_name": {
                    "type": "string",
                    "description": "the field name"
                },
                "view_permission": {
                    "type": "string",
                    "enum": [
                        "Everyone",
                        "Organizer and Data Owner",
                        "Organizer"
                    ]
                },
                "edit_permission": {
                    "type": "string",
                    "enum": [
                        "Everyone",
                        "Organizer and Data Owner",
                        "Organizer"
                    ]
                }
            }
        },
        "ResponseGeneralGroup": {
            "type": "object",
            "description": "The base response model of groups",
            "properties": {
                "group_id": {
                    "type": "string",
                    "description": "the unique ID of group"
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                            }
                        }
                    }
                },
                "group_type": {
                    "type": "string",
                    "description": "for people group, it could be \"attendees\" or \"speakers\" or \"custom\". For other groups, it will be always \"custom\" for now.",
                    "enum": [
                        "attendees",
                        "speakers",
                        "custom"
                    ]
                },
                "group_name": {
                    "type": "string",
                    "description": "the unique name of group"
                },
                "group_color": {
                    "type": "string",
                    "format": "#RRGGBB",
                    "description": "the HEX color code in #RRGGBB"
                },
                "member_number": {
                    "type": "number",
                    "description": "the auto-generated number of members in this group"
                },
                "timestamps": {
                    "type": "object",
                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                    "properties": {
                        "request_datetime": {
                            "type": "string",
                            "description": "The time of this API request"
                        },
                        "creation_datetime": {
                            "type": "string",
                            "description": "the time of object creation"
                        },
                        "update_datetime": {
                            "type": "string",
                            "description": "the time of last modification"
                        }
                    }
                }
            }
        },
        "SessionRoles": {
            "type": "array",
            "description": "the session roles like Speaker, Moderator, etc. Attendees are not in this list. If you want to manage/update this list, you will need to provide the full array of roles. [Issue@Ryan do we support another endpoint like /roles]",
            "items": {
                "type": "object",
                "properties": {
                    "session_role_id": {
                        "type": "string",
                        "description": "the unique ID for session role"
                    },
                    "session_role_name": {
                        "type": "string",
                        "description": "currently only supports \"Speaker\" and \"Moderator\""
                    },
                    "people_list": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "the people IDs assigned to this role"
                        }
                    }
                }
            }
        },
        "SessionRole": {
            "type": "object",
            "properties": {
                "session_role_id": {
                    "type": "string",
                    "description": "the unique ID for session role"
                },
                "session_role_name": {
                    "type": "string",
                    "description": "currently only supports \"Speaker\" and \"Moderator\""
                },
                "people_list": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "the people IDs assigned to this role"
                    }
                }
            }
        },
        "ResponseGeneralTrack": {
            "type": "object",
            "description": "The track info in response",
            "properties": {
                "track_id": {
                    "type": "string",
                    "description": "the unique ID of track"
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                            }
                        }
                    }
                },
                "track_name": {
                    "type": "string",
                    "description": "the unique name of track"
                },
                "track_color": {
                    "type": "string",
                    "format": "#RRGGBB",
                    "description": "the HEX color code in #RRGGBB"
                },
                "track_session_number": {
                    "type": "number",
                    "description": "the auto-generated number of members in this track"
                },
                "timestamps": {
                    "type": "object",
                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                    "properties": {
                        "request_datetime": {
                            "type": "string",
                            "description": "The time of this API request"
                        },
                        "creation_datetime": {
                            "type": "string",
                            "description": "the time of object creation"
                        },
                        "update_datetime": {
                            "type": "string",
                            "description": "the time of last modification"
                        }
                    }
                }
            }
        },
        "ResponsePeopleGroupMember": {
            "type": "array",
            "description": "The basic info of members in people group",
            "items": {
                "type": "object",
                "properties": {
                    "person_id": {
                        "type": "string",
                        "description": "the unique ID of person in people"
                    },
                    "external_ids": {
                        "type": "array",
                        "description": "the external IDs used for integrations",
                        "items": {
                            "type": "object",
                            "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                            "properties": {
                                "id_system": {
                                    "type": "string",
                                    "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "the external ID. Must be unique in the same ID system. Case sensitive."
                                }
                            }
                        }
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email_address": {
                        "type": "string"
                    },
                    "timestamps": {
                        "type": "object",
                        "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                        "properties": {
                            "request_datetime": {
                                "type": "string",
                                "description": "The time of this API request"
                            },
                            "creation_datetime": {
                                "type": "string",
                                "description": "the time of object creation"
                            },
                            "update_datetime": {
                                "type": "string",
                                "description": "the time of last modification"
                            }
                        }
                    }
                }
            }
        },
        "ResponseGroupArray": {
            "type": "array",
            "description": "The array of groups",
            "items": {
                "type": "object",
                "properties": {
                    "group_id": {
                        "type": "string",
                        "description": "the unique ID of group"
                    },
                    "group_name": {
                        "type": "string",
                        "description": "the name of group"
                    }
                }
            }
        },
        "RequestPeopleGroup": {
            "type": "object",
            "description": "Define new group. group_type will be assigned as \"custom\".",
            "properties": {
                "group_name": {
                    "type": "string",
                    "description": "the unique name of group"
                },
                "group_color": {
                    "type": "string",
                    "format": "#RRGGBB",
                    "description": "the HEX color code in #RRGGBB. If not provided, system will use default color."
                },
                "group_note": {
                    "type": "string",
                    "description": "the optional note/explaination of this group"
                },
                "group_members": {
                    "type": "array",
                    "description": "the members to be added to the group. Please provide either id or email.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "member_id": {
                                "type": "string",
                                "description": "the ID of people member"
                            },
                            "member_email": {
                                "type": "string",
                                "description": "the email of people."
                            }
                        }
                    }
                }
            }
        },
        "AttendeeAgenda": {
            "type": "object",
            "description": "Agenda for people record. Defaultly, if no session role is assigned, the people is attendee.",
            "properties": {
                "sessions": {
                    "type": "array",
                    "description": "sessions info in array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "session_id": {
                                "type": "string",
                                "description": "the session ID"
                            },
                            "session_roles": {
                                "type": "array",
                                "description": "the session role IDs in array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "AttendeeFavData": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "array",
                    "description": "the personal agenda with session IDs to attend",
                    "items": {
                        "type": "string"
                    }
                },
                "companies": {
                    "type": "object"
                },
                "docs": {
                    "type": "object"
                }
            }
        },
        "Timestamps": {
            "type": "object",
            "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
            "properties": {
                "request_datetime": {
                    "type": "string",
                    "description": "The time of this API request"
                },
                "creation_datetime": {
                    "type": "string",
                    "description": "the time of object creation"
                },
                "update_datetime": {
                    "type": "string",
                    "description": "the time of last modification"
                }
            }
        },
        "PlaceHolder": {
            "type": "object",
            "description": "This is the placeholder"
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    },
    "parameters": {
        "EventIDParam": {
            "name": "event_id",
            "in": "path",
            "description": "the event ID of specific event.",
            "required": true,
            "type": "string"
        },
        "PersonIDParam": {
            "name": "person_id",
            "in": "path",
            "description": "the person ID of specific event.",
            "required": true,
            "type": "string"
        },
        "GroupIDParam": {
            "name": "group_id",
            "in": "path",
            "description": "the group ID.",
            "required": true,
            "type": "string"
        },
        "TrackIDParam": {
            "name": "track_id",
            "in": "path",
            "description": "the track ID.",
            "required": true,
            "type": "string"
        },
        "SessionIDParam": {
            "name": "session_id",
            "in": "path",
            "description": "the session ID (in event schedule).",
            "required": true,
            "type": "string"
        },
        "ResourceIDParam": {
            "name": "resource_id",
            "in": "path",
            "description": "the resource ID.",
            "required": true,
            "type": "string"
        },
        "MultipleIDsParam": {
            "name": "ids",
            "in": "query",
            "description": "filter results by specific IDs. Please use \",\" to seperate multiple items.",
            "required": false,
            "type": "string"
        },
        "MultipleEmailsParam": {
            "name": "emails",
            "in": "query",
            "description": "filter results by specific Emails. Please use \",\" to seperate multiple items.",
            "required": false,
            "type": "string"
        },
        "MultipleGroupsParam": {
            "name": "groups",
            "in": "query",
            "description": "filter results by specific Groups. Please use \",\" to seperate multiple items.",
            "required": false,
            "type": "string"
        },
        "LimitParam": {
            "name": "limit",
            "in": "query",
            "description": "Limits the number of returned results",
            "required": false,
            "type": "number",
            "format": "int32"
        },
        "OffsetParam": {
            "name": "offset",
            "in": "query",
            "description": "Define the offset index of returned results",
            "required": false,
            "type": "number",
            "format": "int32"
        },
        "IDSystemParam": {
            "name": "ext_id_system",
            "in": "header",
            "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
            "required": false,
            "type": "string"
        }
    }
}