{
    "info": {
        "title": "EventMobi API V2 Spec",
        "description": "Eventmobi Public API documentation.\n\nPlease refer to [developer site for tutotials, SDK and helps](http://google.ca).\n\nUpdated Aug 2016. Please refer to the [patch notes for details](http://google.ca).\n",
        "version": "2.0.1a"
    },
    "host": "api.eventmobi.com",
    "schemes": [
        "https"
    ],
    "basePath": "/en/api/v2/",
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "paths": {
        "/events": {
            "get": {
                "summary": "Get all events",
                "description": "List all the events associated with the current organization by API Key or authentication credentials. \n\nOnly basic event infomation will be provided in response to idenitfy events. Please use /events/{eventID} to retrieve details of each event.\n",
                "tags": [
                    "Event"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limits the number of returned results",
                        "required": false,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Define the offset index of returned results",
                        "required": false,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of basic event info",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "the default Eventmobi ID of event."
                                    },
                                    "external_ids": {
                                        "type": "array",
                                        "description": "the external IDs used for integrations",
                                        "items": {
                                            "type": "object",
                                            "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                            "properties": {
                                                "id_system": {
                                                    "type": "string",
                                                    "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "description": "the external ID"
                                                }
                                            }
                                        }
                                    },
                                    "short_code": {
                                        "type": "string",
                                        "description": "the short-code and url path of event"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "the event name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "the description of event in HTML code"
                                    },
                                    "language": {
                                        "type": "string",
                                        "description": "the language of event"
                                    },
                                    "data_counters": {
                                        "type": "object",
                                        "description": "The numbers of each event data type. Auto-generated: will ignore in post request",
                                        "properties": {
                                            "sections": {
                                                "type": "integer",
                                                "description": "the number of front-end UI sections in this event"
                                            },
                                            "people": {
                                                "type": "integer",
                                                "description": "the number of people (speaker, attendee, etc.) in this event. Note: the contacts in reg mailing list are not included."
                                            },
                                            "sessions": {
                                                "type": "integer",
                                                "description": "the number of session included in this event"
                                            },
                                            "companies": {
                                                "type": "integer",
                                                "description": "the number of companies included in this event"
                                            },
                                            "documents": {
                                                "type": "integer",
                                                "description": "the number of documents uploaded"
                                            },
                                            "maps": {
                                                "type": "integer",
                                                "description": "the number of maps"
                                            }
                                        }
                                    },
                                    "event_location": {
                                        "type": "object",
                                        "description": "The location information of event",
                                        "properties": {
                                            "location_name": {
                                                "type": "string",
                                                "description": "the name of location (e.g. Eventmobi HQ)"
                                            },
                                            "location_address": {
                                                "type": "string",
                                                "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                                            }
                                        }
                                    },
                                    "event_dates": {
                                        "type": "object",
                                        "description": "The dates info of event",
                                        "properties": {
                                            "start_date": {
                                                "type": "string",
                                                "format": "YYYY-MM-DD",
                                                "description": "the start date of event in YYYY-MM-DD"
                                            },
                                            "end_date": {
                                                "type": "string",
                                                "format": "YYYY-MM-DD",
                                                "description": "the end date of event in YYYY-MM-DD"
                                            },
                                            "time_zone_tz": {
                                                "type": "string",
                                                "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                                            },
                                            "time_zone_offset": {
                                                "type": "string",
                                                "description": "the timezone offset to UTC. E.g. -05:00"
                                            },
                                            "time_format": {
                                                "type": "integer",
                                                "enum": [
                                                    12,
                                                    24
                                                ],
                                                "default": 12,
                                                "description": "the number value can be 12 or 24 hours format. Default value: 12"
                                            }
                                        }
                                    },
                                    "event_urls": {
                                        "type": "object",
                                        "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                                        "properties": {
                                            "event_app": {
                                                "type": "string",
                                                "description": "the URL to launch event web App"
                                            },
                                            "reg_app": {
                                                "type": "string",
                                                "description": "the URL to launch reg web App"
                                            },
                                            "checkin_app": {
                                                "type": "string",
                                                "description": "the URL to launch check in App"
                                            },
                                            "cms_app": {
                                                "type": "string",
                                                "description": "the URL to launch CMS backend"
                                            }
                                        }
                                    },
                                    "timestamps": {
                                        "type": "object",
                                        "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                        "properties": {
                                            "request_timestamp": {
                                                "type": "string",
                                                "description": "The time of this API request"
                                            },
                                            "creation_timestamp": {
                                                "type": "string",
                                                "description": "the time of object creation"
                                            },
                                            "update_timestamp": {
                                                "type": "string",
                                                "description": "the time of last modification"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add new event",
                "tags": [
                    "Event"
                ],
                "description": "\nCreate a new event in the organization that API Key associated. The required fields below should be inclueded in request body. If success, a 200 response message will include the event object added. \n\nThe Event ID is saved with set of (System + ID Value). An event can have multiple IDs in different Systems. This enables easy integration and API access with/from external systems.  \n\nFor this POST request, \"id\" is optional. If \"id\" field is provided but no \"ext_id_system\" is specified, this external ID will be added with System Name of \"External\". Or if the \"ext_id_system\" is provided, this System Name will be used. \n\nAdditional IDs can be added in the external_ids property. Please refer to the data structure below. \n\nAn Eventmobi internal ID (unique integer number) will always be automatically created with system name of \"Eventmobi\", and use as default ID system if \"ext_id_system\" doesn't exist.\n\nAPI will reject the creation request if the ID exists for each System Name. \n\n*Please note*: Depends on your package or subscription, you may not have permission to create event with a 402 response. In that case, you may want to [contact our Sales team](http://eventmobi.com).\n",
                "parameters": [
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    },
                    {
                        "name": "event",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the default Eventmobi ID of event."
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations.",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "short_code": {
                                    "type": "string",
                                    "description": "the short-code and url path of event"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the event name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "the description of event in HTML code"
                                },
                                "language": {
                                    "type": "string",
                                    "description": "the language of event"
                                },
                                "event_location": {
                                    "type": "object",
                                    "description": "The location information of event",
                                    "properties": {
                                        "location_name": {
                                            "type": "string",
                                            "description": "the name of location (e.g. Eventmobi HQ)"
                                        },
                                        "location_address": {
                                            "type": "string",
                                            "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                                        }
                                    }
                                },
                                "event_dates": {
                                    "type": "object",
                                    "description": "The dates info of event",
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the start date of event in YYYY-MM-DD"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the end date of event in YYYY-MM-DD"
                                        },
                                        "time_zone_tz": {
                                            "type": "string",
                                            "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                                        },
                                        "time_zone_offset": {
                                            "type": "string",
                                            "description": "the timezone offset to UTC. E.g. -05:00"
                                        },
                                        "time_format": {
                                            "type": "integer",
                                            "enum": [
                                                12,
                                                24
                                            ],
                                            "default": 12,
                                            "description": "the number value can be 12 or 24 hours format. Default value: 12"
                                        }
                                    }
                                },
                                "event_urls": {
                                    "type": "object",
                                    "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "event_app": {
                                            "type": "string",
                                            "description": "the URL to launch event web App"
                                        },
                                        "reg_app": {
                                            "type": "string",
                                            "description": "the URL to launch reg web App"
                                        },
                                        "checkin_app": {
                                            "type": "string",
                                            "description": "the URL to launch check in App"
                                        },
                                        "cms_app": {
                                            "type": "string",
                                            "description": "the URL to launch CMS backend"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The new event created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the default Eventmobi ID of event."
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "short_code": {
                                    "type": "string",
                                    "description": "the short-code and url path of event"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the event name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "the description of event in HTML code"
                                },
                                "language": {
                                    "type": "string",
                                    "description": "the language of event"
                                },
                                "data_counters": {
                                    "type": "object",
                                    "description": "The numbers of each event data type. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "sections": {
                                            "type": "integer",
                                            "description": "the number of front-end UI sections in this event"
                                        },
                                        "people": {
                                            "type": "integer",
                                            "description": "the number of people (speaker, attendee, etc.) in this event. Note: the contacts in reg mailing list are not included."
                                        },
                                        "sessions": {
                                            "type": "integer",
                                            "description": "the number of session included in this event"
                                        },
                                        "companies": {
                                            "type": "integer",
                                            "description": "the number of companies included in this event"
                                        },
                                        "documents": {
                                            "type": "integer",
                                            "description": "the number of documents uploaded"
                                        },
                                        "maps": {
                                            "type": "integer",
                                            "description": "the number of maps"
                                        }
                                    }
                                },
                                "event_location": {
                                    "type": "object",
                                    "description": "The location information of event",
                                    "properties": {
                                        "location_name": {
                                            "type": "string",
                                            "description": "the name of location (e.g. Eventmobi HQ)"
                                        },
                                        "location_address": {
                                            "type": "string",
                                            "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                                        }
                                    }
                                },
                                "event_dates": {
                                    "type": "object",
                                    "description": "The dates info of event",
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the start date of event in YYYY-MM-DD"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the end date of event in YYYY-MM-DD"
                                        },
                                        "time_zone_tz": {
                                            "type": "string",
                                            "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                                        },
                                        "time_zone_offset": {
                                            "type": "string",
                                            "description": "the timezone offset to UTC. E.g. -05:00"
                                        },
                                        "time_format": {
                                            "type": "integer",
                                            "enum": [
                                                12,
                                                24
                                            ],
                                            "default": 12,
                                            "description": "the number value can be 12 or 24 hours format. Default value: 12"
                                        }
                                    }
                                },
                                "event_urls": {
                                    "type": "object",
                                    "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "event_app": {
                                            "type": "string",
                                            "description": "the URL to launch event web App"
                                        },
                                        "reg_app": {
                                            "type": "string",
                                            "description": "the URL to launch reg web App"
                                        },
                                        "checkin_app": {
                                            "type": "string",
                                            "description": "the URL to launch check in App"
                                        },
                                        "cms_app": {
                                            "type": "string",
                                            "description": "the URL to launch CMS backend"
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Please contact our Sales to set up new event",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "An Event with same ID already exist for the target system.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}": {
            "get": {
                "summary": "Get specific event by ID",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "The event info created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the default Eventmobi ID of event."
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "short_code": {
                                    "type": "string",
                                    "description": "the short-code and url path of event"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the event name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "the description of event in HTML code"
                                },
                                "language": {
                                    "type": "string",
                                    "description": "the language of event"
                                },
                                "data_counters": {
                                    "type": "object",
                                    "description": "The numbers of each event data type. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "sections": {
                                            "type": "integer",
                                            "description": "the number of front-end UI sections in this event"
                                        },
                                        "people": {
                                            "type": "integer",
                                            "description": "the number of people (speaker, attendee, etc.) in this event. Note: the contacts in reg mailing list are not included."
                                        },
                                        "sessions": {
                                            "type": "integer",
                                            "description": "the number of session included in this event"
                                        },
                                        "companies": {
                                            "type": "integer",
                                            "description": "the number of companies included in this event"
                                        },
                                        "documents": {
                                            "type": "integer",
                                            "description": "the number of documents uploaded"
                                        },
                                        "maps": {
                                            "type": "integer",
                                            "description": "the number of maps"
                                        }
                                    }
                                },
                                "event_location": {
                                    "type": "object",
                                    "description": "The location information of event",
                                    "properties": {
                                        "location_name": {
                                            "type": "string",
                                            "description": "the name of location (e.g. Eventmobi HQ)"
                                        },
                                        "location_address": {
                                            "type": "string",
                                            "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                                        }
                                    }
                                },
                                "event_dates": {
                                    "type": "object",
                                    "description": "The dates info of event",
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the start date of event in YYYY-MM-DD"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the end date of event in YYYY-MM-DD"
                                        },
                                        "time_zone_tz": {
                                            "type": "string",
                                            "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                                        },
                                        "time_zone_offset": {
                                            "type": "string",
                                            "description": "the timezone offset to UTC. E.g. -05:00"
                                        },
                                        "time_format": {
                                            "type": "integer",
                                            "enum": [
                                                12,
                                                24
                                            ],
                                            "default": 12,
                                            "description": "the number value can be 12 or 24 hours format. Default value: 12"
                                        }
                                    }
                                },
                                "event_urls": {
                                    "type": "object",
                                    "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "event_app": {
                                            "type": "string",
                                            "description": "the URL to launch event web App"
                                        },
                                        "reg_app": {
                                            "type": "string",
                                            "description": "the URL to launch reg web App"
                                        },
                                        "checkin_app": {
                                            "type": "string",
                                            "description": "the URL to launch check in App"
                                        },
                                        "cms_app": {
                                            "type": "string",
                                            "description": "the URL to launch CMS backend"
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update selective data in specific event by ID",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the default Eventmobi ID of event."
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations.",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "short_code": {
                                    "type": "string",
                                    "description": "the short-code and url path of event"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the event name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "the description of event in HTML code"
                                },
                                "language": {
                                    "type": "string",
                                    "description": "the language of event"
                                },
                                "event_location": {
                                    "type": "object",
                                    "description": "The location information of event",
                                    "properties": {
                                        "location_name": {
                                            "type": "string",
                                            "description": "the name of location (e.g. Eventmobi HQ)"
                                        },
                                        "location_address": {
                                            "type": "string",
                                            "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                                        }
                                    }
                                },
                                "event_dates": {
                                    "type": "object",
                                    "description": "The dates info of event",
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the start date of event in YYYY-MM-DD"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the end date of event in YYYY-MM-DD"
                                        },
                                        "time_zone_tz": {
                                            "type": "string",
                                            "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                                        },
                                        "time_zone_offset": {
                                            "type": "string",
                                            "description": "the timezone offset to UTC. E.g. -05:00"
                                        },
                                        "time_format": {
                                            "type": "integer",
                                            "enum": [
                                                12,
                                                24
                                            ],
                                            "default": 12,
                                            "description": "the number value can be 12 or 24 hours format. Default value: 12"
                                        }
                                    }
                                },
                                "event_urls": {
                                    "type": "object",
                                    "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "event_app": {
                                            "type": "string",
                                            "description": "the URL to launch event web App"
                                        },
                                        "reg_app": {
                                            "type": "string",
                                            "description": "the URL to launch reg web App"
                                        },
                                        "checkin_app": {
                                            "type": "string",
                                            "description": "the URL to launch check in App"
                                        },
                                        "cms_app": {
                                            "type": "string",
                                            "description": "the URL to launch CMS backend"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "The event info created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the default Eventmobi ID of event."
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "short_code": {
                                    "type": "string",
                                    "description": "the short-code and url path of event"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the event name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "the description of event in HTML code"
                                },
                                "language": {
                                    "type": "string",
                                    "description": "the language of event"
                                },
                                "data_counters": {
                                    "type": "object",
                                    "description": "The numbers of each event data type. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "sections": {
                                            "type": "integer",
                                            "description": "the number of front-end UI sections in this event"
                                        },
                                        "people": {
                                            "type": "integer",
                                            "description": "the number of people (speaker, attendee, etc.) in this event. Note: the contacts in reg mailing list are not included."
                                        },
                                        "sessions": {
                                            "type": "integer",
                                            "description": "the number of session included in this event"
                                        },
                                        "companies": {
                                            "type": "integer",
                                            "description": "the number of companies included in this event"
                                        },
                                        "documents": {
                                            "type": "integer",
                                            "description": "the number of documents uploaded"
                                        },
                                        "maps": {
                                            "type": "integer",
                                            "description": "the number of maps"
                                        }
                                    }
                                },
                                "event_location": {
                                    "type": "object",
                                    "description": "The location information of event",
                                    "properties": {
                                        "location_name": {
                                            "type": "string",
                                            "description": "the name of location (e.g. Eventmobi HQ)"
                                        },
                                        "location_address": {
                                            "type": "string",
                                            "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                                        }
                                    }
                                },
                                "event_dates": {
                                    "type": "object",
                                    "description": "The dates info of event",
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the start date of event in YYYY-MM-DD"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the end date of event in YYYY-MM-DD"
                                        },
                                        "time_zone_tz": {
                                            "type": "string",
                                            "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                                        },
                                        "time_zone_offset": {
                                            "type": "string",
                                            "description": "the timezone offset to UTC. E.g. -05:00"
                                        },
                                        "time_format": {
                                            "type": "integer",
                                            "enum": [
                                                12,
                                                24
                                            ],
                                            "default": 12,
                                            "description": "the number value can be 12 or 24 hours format. Default value: 12"
                                        }
                                    }
                                },
                                "event_urls": {
                                    "type": "object",
                                    "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "event_app": {
                                            "type": "string",
                                            "description": "the URL to launch event web App"
                                        },
                                        "reg_app": {
                                            "type": "string",
                                            "description": "the URL to launch reg web App"
                                        },
                                        "checkin_app": {
                                            "type": "string",
                                            "description": "the URL to launch check in App"
                                        },
                                        "cms_app": {
                                            "type": "string",
                                            "description": "the URL to launch CMS backend"
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "One or more fields is read-only or auto-generated. It should not set in request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Overwrite record of specific event by ID",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "event",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the default Eventmobi ID of event."
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations.",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "short_code": {
                                    "type": "string",
                                    "description": "the short-code and url path of event"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the event name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "the description of event in HTML code"
                                },
                                "language": {
                                    "type": "string",
                                    "description": "the language of event"
                                },
                                "event_location": {
                                    "type": "object",
                                    "description": "The location information of event",
                                    "properties": {
                                        "location_name": {
                                            "type": "string",
                                            "description": "the name of location (e.g. Eventmobi HQ)"
                                        },
                                        "location_address": {
                                            "type": "string",
                                            "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                                        }
                                    }
                                },
                                "event_dates": {
                                    "type": "object",
                                    "description": "The dates info of event",
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the start date of event in YYYY-MM-DD"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the end date of event in YYYY-MM-DD"
                                        },
                                        "time_zone_tz": {
                                            "type": "string",
                                            "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                                        },
                                        "time_zone_offset": {
                                            "type": "string",
                                            "description": "the timezone offset to UTC. E.g. -05:00"
                                        },
                                        "time_format": {
                                            "type": "integer",
                                            "enum": [
                                                12,
                                                24
                                            ],
                                            "default": 12,
                                            "description": "the number value can be 12 or 24 hours format. Default value: 12"
                                        }
                                    }
                                },
                                "event_urls": {
                                    "type": "object",
                                    "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "event_app": {
                                            "type": "string",
                                            "description": "the URL to launch event web App"
                                        },
                                        "reg_app": {
                                            "type": "string",
                                            "description": "the URL to launch reg web App"
                                        },
                                        "checkin_app": {
                                            "type": "string",
                                            "description": "the URL to launch check in App"
                                        },
                                        "cms_app": {
                                            "type": "string",
                                            "description": "the URL to launch CMS backend"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "The event info updated",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the default Eventmobi ID of event."
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "short_code": {
                                    "type": "string",
                                    "description": "the short-code and url path of event"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the event name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "the description of event in HTML code"
                                },
                                "language": {
                                    "type": "string",
                                    "description": "the language of event"
                                },
                                "data_counters": {
                                    "type": "object",
                                    "description": "The numbers of each event data type. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "sections": {
                                            "type": "integer",
                                            "description": "the number of front-end UI sections in this event"
                                        },
                                        "people": {
                                            "type": "integer",
                                            "description": "the number of people (speaker, attendee, etc.) in this event. Note: the contacts in reg mailing list are not included."
                                        },
                                        "sessions": {
                                            "type": "integer",
                                            "description": "the number of session included in this event"
                                        },
                                        "companies": {
                                            "type": "integer",
                                            "description": "the number of companies included in this event"
                                        },
                                        "documents": {
                                            "type": "integer",
                                            "description": "the number of documents uploaded"
                                        },
                                        "maps": {
                                            "type": "integer",
                                            "description": "the number of maps"
                                        }
                                    }
                                },
                                "event_location": {
                                    "type": "object",
                                    "description": "The location information of event",
                                    "properties": {
                                        "location_name": {
                                            "type": "string",
                                            "description": "the name of location (e.g. Eventmobi HQ)"
                                        },
                                        "location_address": {
                                            "type": "string",
                                            "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                                        }
                                    }
                                },
                                "event_dates": {
                                    "type": "object",
                                    "description": "The dates info of event",
                                    "properties": {
                                        "start_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the start date of event in YYYY-MM-DD"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "YYYY-MM-DD",
                                            "description": "the end date of event in YYYY-MM-DD"
                                        },
                                        "time_zone_tz": {
                                            "type": "string",
                                            "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                                        },
                                        "time_zone_offset": {
                                            "type": "string",
                                            "description": "the timezone offset to UTC. E.g. -05:00"
                                        },
                                        "time_format": {
                                            "type": "integer",
                                            "enum": [
                                                12,
                                                24
                                            ],
                                            "default": 12,
                                            "description": "the number value can be 12 or 24 hours format. Default value: 12"
                                        }
                                    }
                                },
                                "event_urls": {
                                    "type": "object",
                                    "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                                    "properties": {
                                        "event_app": {
                                            "type": "string",
                                            "description": "the URL to launch event web App"
                                        },
                                        "reg_app": {
                                            "type": "string",
                                            "description": "the URL to launch reg web App"
                                        },
                                        "checkin_app": {
                                            "type": "string",
                                            "description": "the URL to launch check in App"
                                        },
                                        "cms_app": {
                                            "type": "string",
                                            "description": "the URL to launch CMS backend"
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "One or more fields is read-only or auto-generated. It should not set in request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sections": {
            "get": {
                "summary": "Get all sections",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "tags": [
                    "Section"
                ],
                "responses": {
                    "200": {
                        "description": "The sections in array",
                        "schema": {
                            "type": "object",
                            "description": "This is the placeholder"
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/sections/people_sections": {
            "get": {
                "summary": "Get all people sections",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "tags": [
                    "Section"
                ],
                "responses": {
                    "200": {
                        "description": "The people sections in array",
                        "schema": {
                            "type": "object",
                            "description": "This is the placeholder"
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people": {
            "get": {
                "summary": "People Data Overview",
                "description": "This request will return an overview of people data statistics in specific events. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The statistics of people data",
                        "schema": {
                            "type": "object",
                            "description": "The statistics of people data",
                            "properties": {
                                "people_number": {
                                    "type": "integer",
                                    "description": "people number in this event. You may use this number for better query pagination."
                                },
                                "group_number": {
                                    "type": "integer",
                                    "description": "the number of groups defined"
                                },
                                "groups": {
                                    "type": "array",
                                    "description": "the groups defined in this event.",
                                    "items": {
                                        "type": "object",
                                        "description": "The base response model of groups",
                                        "properties": {
                                            "group_id": {
                                                "type": "string",
                                                "description": "the unique ID of group"
                                            },
                                            "group_name": {
                                                "type": "string",
                                                "description": "the unique name of group"
                                            },
                                            "member_number": {
                                                "type": "number",
                                                "description": "the auto-generated number of members in this group"
                                            },
                                            "group_color": {
                                                "type": "string",
                                                "format": "#RRGGBB",
                                                "description": "the HEX color code in #RRGGBB"
                                            },
                                            "group_note": {
                                                "type": "string",
                                                "description": "the optional note/explaination of this group"
                                            },
                                            "timestamps": {
                                                "type": "object",
                                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                                "properties": {
                                                    "request_timestamp": {
                                                        "type": "string",
                                                        "description": "The time of this API request"
                                                    },
                                                    "creation_timestamp": {
                                                        "type": "string",
                                                        "description": "the time of object creation"
                                                    },
                                                    "update_timestamp": {
                                                        "type": "string",
                                                        "description": "the time of last modification"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_field_number": {
                                    "type": "integer",
                                    "description": "the number of custom fields"
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "the custom fields defined in this event",
                                    "items": {
                                        "type": "object",
                                        "description": "The base custom field model",
                                        "properties": {
                                            "custom_field_id": {
                                                "type": "string",
                                                "description": "the unique ID of custom field"
                                            },
                                            "field_name": {
                                                "type": "string",
                                                "description": "the field name"
                                            },
                                            "view_permission": {
                                                "type": "string",
                                                "enum": [
                                                    "Everyone",
                                                    "Organizer and Data Owner",
                                                    "Organizer"
                                                ]
                                            },
                                            "edit_permission": {
                                                "type": "string",
                                                "enum": [
                                                    "Everyone",
                                                    "Organizer and Data Owner",
                                                    "Organizer"
                                                ]
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/person": {
            "get": {
                "summary": "Retrieve people data in array",
                "description": "This request will return an array of people data statistics in specific events. Default paginition is the first 20 records from offset 0. \n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The array of people",
                        "schema": {
                            "type": "object",
                            "description": "the query of people",
                            "properties": {
                                "query_string": {
                                    "type": "string",
                                    "description": "the original query string. Offset and limit parameter will show default value (offset=0&limit=20) if not provided in original request."
                                },
                                "record_number": {
                                    "type": "integer",
                                    "description": "the number of recodes that matches query. If no query filters requested, this will be the total number of people."
                                },
                                "people_list": {
                                    "type": "array",
                                    "description": "the array of people",
                                    "items": {
                                        "type": "object",
                                        "description": "the single person record",
                                        "properties": {
                                            "person_id": {
                                                "type": "string",
                                                "description": "the unique ID of person in people"
                                            },
                                            "external_ids": {
                                                "type": "array",
                                                "description": "the external IDs used for integrations",
                                                "items": {
                                                    "type": "object",
                                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                                    "properties": {
                                                        "id_system": {
                                                            "type": "string",
                                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "description": "the external ID"
                                                        }
                                                    }
                                                }
                                            },
                                            "profile": {
                                                "type": "object",
                                                "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                                "properties": {
                                                    "first_name": {
                                                        "type": "string"
                                                    },
                                                    "last_name": {
                                                        "type": "string"
                                                    },
                                                    "email_address": {
                                                        "type": "string"
                                                    },
                                                    "picture": {
                                                        "type": "string"
                                                    },
                                                    "groups": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "description": "the ID of groups. Please use /people/groups to check group config."
                                                        }
                                                    },
                                                    "company": {
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "about": {
                                                        "type": "string"
                                                    },
                                                    "social_contacts": {
                                                        "type": "object",
                                                        "description": "The general contact info record",
                                                        "properties": {
                                                            "twitter_url": {
                                                                "type": "string"
                                                            },
                                                            "facebook_url": {
                                                                "type": "string"
                                                            },
                                                            "linkedin_url": {
                                                                "type": "string"
                                                            },
                                                            "website_url": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "custom_fields_meta": {
                                                "type": "object",
                                                "description": "the {custom_field_key:custom_field_value} format JSON object"
                                            },
                                            "favorite_data": {
                                                "type": "object",
                                                "properties": {
                                                    "sessions": {
                                                        "type": "object"
                                                    },
                                                    "companies": {
                                                        "type": "object"
                                                    },
                                                    "docs": {
                                                        "type": "object"
                                                    },
                                                    "notes": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "regstration": {
                                                "type": "object",
                                                "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                                                "properties": {
                                                    "order_ticket_name": {
                                                        "type": "string",
                                                        "description": "Ticket Name"
                                                    },
                                                    "order_paid": {
                                                        "type": "string",
                                                        "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                                                    },
                                                    "order_transaction_id": {
                                                        "type": "string",
                                                        "description": "Striple transaction id for tracking"
                                                    },
                                                    "reg_email_campaign": {
                                                        "type": "string",
                                                        "description": "The email title user used to register"
                                                    },
                                                    "reg_utm": {
                                                        "type": "string",
                                                        "description": "The UTM tracking parameters in encoded string"
                                                    },
                                                    "form_meta": {
                                                        "type": "array",
                                                        "description": "The info user filled in form in reg app",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "question": {
                                                                    "type": "string"
                                                                },
                                                                "answer": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "docs": {
                                                "type": "array",
                                                "description": "the docs linked to the people",
                                                "items": {
                                                    "type": "string",
                                                    "description": "The document ID"
                                                }
                                            },
                                            "config_meta": {
                                                "type": "object",
                                                "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                                            },
                                            "tags": {
                                                "type": "string",
                                                "description": "tags for the person. Seperated by \",\" between keywords."
                                            },
                                            "activities": {
                                                "type": "array",
                                                "description": "activity logs of a person record.",
                                                "items": {
                                                    "type": "object",
                                                    "description": "A single record of people activity history",
                                                    "properties": {
                                                        "product": {
                                                            "type": "string",
                                                            "description": "the product of activity. E.g. App/Reg/etc."
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "the action info string"
                                                        },
                                                        "timestamp": {
                                                            "type": "string",
                                                            "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                                                        }
                                                    }
                                                }
                                            },
                                            "timestamps": {
                                                "type": "object",
                                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                                "properties": {
                                                    "request_timestamp": {
                                                        "type": "string",
                                                        "description": "The time of this API request"
                                                    },
                                                    "creation_timestamp": {
                                                        "type": "string",
                                                        "description": "the time of object creation"
                                                    },
                                                    "update_timestamp": {
                                                        "type": "string",
                                                        "description": "the time of last modification"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create new Person record",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture filename in base profile.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. This parameter is required if your image is not square (same height and length)"
                                        },
                                        "rename": {
                                            "type": "string",
                                            "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                        }
                                    }
                                },
                                "uplaod_docs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Use this structure if you want Eventmobi to download the document from Internet locations and associate it.",
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "description": "file location. Have to have a valid document type ()"
                                            },
                                            "rename": {
                                                "type": "string",
                                                "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                            },
                                            "assign_groups": {
                                                "type": "array",
                                                "description": "the groups this documetion belongs to. the groups must be defined in CMS or this will be ignored.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record created",
                        "schema": {
                            "type": "object",
                            "description": "This is the placeholder"
                        }
                    },
                    "403": {
                        "description": "One or more fields is read-only or auto-generated. It should not set in request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/person/{person_id}": {
            "get": {
                "summary": "Retrieve specific person record",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The single person record",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_key:custom_field_value} format JSON object"
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "object"
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        },
                                        "notes": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "regstration": {
                                    "type": "object",
                                    "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                                    "properties": {
                                        "order_ticket_name": {
                                            "type": "string",
                                            "description": "Ticket Name"
                                        },
                                        "order_paid": {
                                            "type": "string",
                                            "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                                        },
                                        "order_transaction_id": {
                                            "type": "string",
                                            "description": "Striple transaction id for tracking"
                                        },
                                        "reg_email_campaign": {
                                            "type": "string",
                                            "description": "The email title user used to register"
                                        },
                                        "reg_utm": {
                                            "type": "string",
                                            "description": "The UTM tracking parameters in encoded string"
                                        },
                                        "form_meta": {
                                            "type": "array",
                                            "description": "The info user filled in form in reg app",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "question": {
                                                        "type": "string"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "config_meta": {
                                    "type": "object",
                                    "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "tags for the person. Seperated by \",\" between keywords."
                                },
                                "activities": {
                                    "type": "array",
                                    "description": "activity logs of a person record.",
                                    "items": {
                                        "type": "object",
                                        "description": "A single record of people activity history",
                                        "properties": {
                                            "product": {
                                                "type": "string",
                                                "description": "the product of activity. E.g. App/Reg/etc."
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "the action info string"
                                            },
                                            "timestamp": {
                                                "type": "string",
                                                "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update specific person record",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture filename in base profile.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. This parameter is required if your image is not square (same height and length)"
                                        },
                                        "rename": {
                                            "type": "string",
                                            "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                        }
                                    }
                                },
                                "uplaod_docs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Use this structure if you want Eventmobi to download the document from Internet locations and associate it.",
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "description": "file location. Have to have a valid document type ()"
                                            },
                                            "rename": {
                                                "type": "string",
                                                "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                            },
                                            "assign_groups": {
                                                "type": "array",
                                                "description": "the groups this documetion belongs to. the groups must be defined in CMS or this will be ignored.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record updated",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_key:custom_field_value} format JSON object"
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "object"
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        },
                                        "notes": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "regstration": {
                                    "type": "object",
                                    "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                                    "properties": {
                                        "order_ticket_name": {
                                            "type": "string",
                                            "description": "Ticket Name"
                                        },
                                        "order_paid": {
                                            "type": "string",
                                            "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                                        },
                                        "order_transaction_id": {
                                            "type": "string",
                                            "description": "Striple transaction id for tracking"
                                        },
                                        "reg_email_campaign": {
                                            "type": "string",
                                            "description": "The email title user used to register"
                                        },
                                        "reg_utm": {
                                            "type": "string",
                                            "description": "The UTM tracking parameters in encoded string"
                                        },
                                        "form_meta": {
                                            "type": "array",
                                            "description": "The info user filled in form in reg app",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "question": {
                                                        "type": "string"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "config_meta": {
                                    "type": "object",
                                    "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "tags for the person. Seperated by \",\" between keywords."
                                },
                                "activities": {
                                    "type": "array",
                                    "description": "activity logs of a person record.",
                                    "items": {
                                        "type": "object",
                                        "description": "A single record of people activity history",
                                        "properties": {
                                            "product": {
                                                "type": "string",
                                                "description": "the product of activity. E.g. App/Reg/etc."
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "the action info string"
                                            },
                                            "timestamp": {
                                                "type": "string",
                                                "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "One or more fields is read-only or auto-generated. It should not set in request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Overwrite specific person record",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture filename in base profile.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. This parameter is required if your image is not square (same height and length)"
                                        },
                                        "rename": {
                                            "type": "string",
                                            "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                        }
                                    }
                                },
                                "uplaod_docs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Use this structure if you want Eventmobi to download the document from Internet locations and associate it.",
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "description": "file location. Have to have a valid document type ()"
                                            },
                                            "rename": {
                                                "type": "string",
                                                "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                            },
                                            "assign_groups": {
                                                "type": "array",
                                                "description": "the groups this documetion belongs to. the groups must be defined in CMS or this will be ignored.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record updated",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_key:custom_field_value} format JSON object"
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "object"
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        },
                                        "notes": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "regstration": {
                                    "type": "object",
                                    "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                                    "properties": {
                                        "order_ticket_name": {
                                            "type": "string",
                                            "description": "Ticket Name"
                                        },
                                        "order_paid": {
                                            "type": "string",
                                            "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                                        },
                                        "order_transaction_id": {
                                            "type": "string",
                                            "description": "Striple transaction id for tracking"
                                        },
                                        "reg_email_campaign": {
                                            "type": "string",
                                            "description": "The email title user used to register"
                                        },
                                        "reg_utm": {
                                            "type": "string",
                                            "description": "The UTM tracking parameters in encoded string"
                                        },
                                        "form_meta": {
                                            "type": "array",
                                            "description": "The info user filled in form in reg app",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "question": {
                                                        "type": "string"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "config_meta": {
                                    "type": "object",
                                    "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "tags for the person. Seperated by \",\" between keywords."
                                },
                                "activities": {
                                    "type": "array",
                                    "description": "activity logs of a person record.",
                                    "items": {
                                        "type": "object",
                                        "description": "A single record of people activity history",
                                        "properties": {
                                            "product": {
                                                "type": "string",
                                                "description": "the product of activity. E.g. App/Reg/etc."
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "the action info string"
                                            },
                                            "timestamp": {
                                                "type": "string",
                                                "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "One or more fields is read-only or auto-generated. It should not set in request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Overwrite specific person record",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record updated",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_key:custom_field_value} format JSON object"
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "object"
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        },
                                        "notes": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "regstration": {
                                    "type": "object",
                                    "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                                    "properties": {
                                        "order_ticket_name": {
                                            "type": "string",
                                            "description": "Ticket Name"
                                        },
                                        "order_paid": {
                                            "type": "string",
                                            "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                                        },
                                        "order_transaction_id": {
                                            "type": "string",
                                            "description": "Striple transaction id for tracking"
                                        },
                                        "reg_email_campaign": {
                                            "type": "string",
                                            "description": "The email title user used to register"
                                        },
                                        "reg_utm": {
                                            "type": "string",
                                            "description": "The UTM tracking parameters in encoded string"
                                        },
                                        "form_meta": {
                                            "type": "array",
                                            "description": "The info user filled in form in reg app",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "question": {
                                                        "type": "string"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "config_meta": {
                                    "type": "object",
                                    "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "tags for the person. Seperated by \",\" between keywords."
                                },
                                "activities": {
                                    "type": "array",
                                    "description": "activity logs of a person record.",
                                    "items": {
                                        "type": "object",
                                        "description": "A single record of people activity history",
                                        "properties": {
                                            "product": {
                                                "type": "string",
                                                "description": "the product of activity. E.g. App/Reg/etc."
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "the action info string"
                                            },
                                            "timestamp": {
                                                "type": "string",
                                                "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "One or more fields is read-only or auto-generated. It should not set in request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/{event_id}/people/person/{person_id}/groups": {
            "get": {
                "summary": "Retrieve the groups specific person belongs to",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "tags": [
                    "People",
                    "Group"
                ],
                "responses": {
                    "200": {
                        "description": "List of groups the person belongs to",
                        "schema": {
                            "type": "array",
                            "description": "The array of groups",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "group_id": {
                                        "type": "string",
                                        "description": "the unique ID of group (?@Ryan)"
                                    },
                                    "group_name": {
                                        "type": "string",
                                        "description": "the name of group"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update specific person record",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture filename in base profile.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. This parameter is required if your image is not square (same height and length)"
                                        },
                                        "rename": {
                                            "type": "string",
                                            "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                        }
                                    }
                                },
                                "uplaod_docs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Use this structure if you want Eventmobi to download the document from Internet locations and associate it.",
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "description": "file location. Have to have a valid document type ()"
                                            },
                                            "rename": {
                                                "type": "string",
                                                "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                            },
                                            "assign_groups": {
                                                "type": "array",
                                                "description": "the groups this documetion belongs to. the groups must be defined in CMS or this will be ignored.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record updated",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_key:custom_field_value} format JSON object"
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "object"
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        },
                                        "notes": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "regstration": {
                                    "type": "object",
                                    "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                                    "properties": {
                                        "order_ticket_name": {
                                            "type": "string",
                                            "description": "Ticket Name"
                                        },
                                        "order_paid": {
                                            "type": "string",
                                            "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                                        },
                                        "order_transaction_id": {
                                            "type": "string",
                                            "description": "Striple transaction id for tracking"
                                        },
                                        "reg_email_campaign": {
                                            "type": "string",
                                            "description": "The email title user used to register"
                                        },
                                        "reg_utm": {
                                            "type": "string",
                                            "description": "The UTM tracking parameters in encoded string"
                                        },
                                        "form_meta": {
                                            "type": "array",
                                            "description": "The info user filled in form in reg app",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "question": {
                                                        "type": "string"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "config_meta": {
                                    "type": "object",
                                    "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "tags for the person. Seperated by \",\" between keywords."
                                },
                                "activities": {
                                    "type": "array",
                                    "description": "activity logs of a person record.",
                                    "items": {
                                        "type": "object",
                                        "description": "A single record of people activity history",
                                        "properties": {
                                            "product": {
                                                "type": "string",
                                                "description": "the product of activity. E.g. App/Reg/etc."
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "the action info string"
                                            },
                                            "timestamp": {
                                                "type": "string",
                                                "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "One or more fields is read-only or auto-generated. It should not set in request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Overwrite specific person record",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "upload_picture": {
                                    "type": "object",
                                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture filename in base profile.",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                                        },
                                        "trim": {
                                            "type": "string",
                                            "format": "AxB:CxD",
                                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. This parameter is required if your image is not square (same height and length)"
                                        },
                                        "rename": {
                                            "type": "string",
                                            "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                        }
                                    }
                                },
                                "uplaod_docs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Use this structure if you want Eventmobi to download the document from Internet locations and associate it.",
                                        "properties": {
                                            "url": {
                                                "type": "string",
                                                "description": "file location. Have to have a valid document type ()"
                                            },
                                            "rename": {
                                                "type": "string",
                                                "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                                            },
                                            "assign_groups": {
                                                "type": "array",
                                                "description": "the groups this documetion belongs to. the groups must be defined in CMS or this will be ignored.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record updated",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_key:custom_field_value} format JSON object"
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "object"
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        },
                                        "notes": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "regstration": {
                                    "type": "object",
                                    "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                                    "properties": {
                                        "order_ticket_name": {
                                            "type": "string",
                                            "description": "Ticket Name"
                                        },
                                        "order_paid": {
                                            "type": "string",
                                            "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                                        },
                                        "order_transaction_id": {
                                            "type": "string",
                                            "description": "Striple transaction id for tracking"
                                        },
                                        "reg_email_campaign": {
                                            "type": "string",
                                            "description": "The email title user used to register"
                                        },
                                        "reg_utm": {
                                            "type": "string",
                                            "description": "The UTM tracking parameters in encoded string"
                                        },
                                        "form_meta": {
                                            "type": "array",
                                            "description": "The info user filled in form in reg app",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "question": {
                                                        "type": "string"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "config_meta": {
                                    "type": "object",
                                    "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "tags for the person. Seperated by \",\" between keywords."
                                },
                                "activities": {
                                    "type": "array",
                                    "description": "activity logs of a person record.",
                                    "items": {
                                        "type": "object",
                                        "description": "A single record of people activity history",
                                        "properties": {
                                            "product": {
                                                "type": "string",
                                                "description": "the product of activity. E.g. App/Reg/etc."
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "the action info string"
                                            },
                                            "timestamp": {
                                                "type": "string",
                                                "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "One or more fields is read-only or auto-generated. It should not set in request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Overwrite specific person record",
                "description": "Placeholder\n",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "the event ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "person_id",
                        "in": "path",
                        "description": "the person ID of specific event.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ext_id_system",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timestamp_format",
                        "in": "query",
                        "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
                        "required": false,
                        "type": "string",
                        "default": "GMT/UTC timestamp integer",
                        "enum": [
                            "GMT/UTC timestamp integer",
                            "ISO string with timezone"
                        ]
                    }
                ],
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "The person record updated",
                        "schema": {
                            "type": "object",
                            "description": "the single person record",
                            "properties": {
                                "person_id": {
                                    "type": "string",
                                    "description": "the unique ID of person in people"
                                },
                                "external_ids": {
                                    "type": "array",
                                    "description": "the external IDs used for integrations",
                                    "items": {
                                        "type": "object",
                                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                        "properties": {
                                            "id_system": {
                                                "type": "string",
                                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "the external ID"
                                            }
                                        }
                                    }
                                },
                                "profile": {
                                    "type": "object",
                                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email_address": {
                                            "type": "string"
                                        },
                                        "picture": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "description": "the ID of groups. Please use /people/groups to check group config."
                                            }
                                        },
                                        "company": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "about": {
                                            "type": "string"
                                        },
                                        "social_contacts": {
                                            "type": "object",
                                            "description": "The general contact info record",
                                            "properties": {
                                                "twitter_url": {
                                                    "type": "string"
                                                },
                                                "facebook_url": {
                                                    "type": "string"
                                                },
                                                "linkedin_url": {
                                                    "type": "string"
                                                },
                                                "website_url": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "custom_fields_meta": {
                                    "type": "object",
                                    "description": "the {custom_field_key:custom_field_value} format JSON object"
                                },
                                "favorite_data": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "object"
                                        },
                                        "companies": {
                                            "type": "object"
                                        },
                                        "docs": {
                                            "type": "object"
                                        },
                                        "notes": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "regstration": {
                                    "type": "object",
                                    "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                                    "properties": {
                                        "order_ticket_name": {
                                            "type": "string",
                                            "description": "Ticket Name"
                                        },
                                        "order_paid": {
                                            "type": "string",
                                            "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                                        },
                                        "order_transaction_id": {
                                            "type": "string",
                                            "description": "Striple transaction id for tracking"
                                        },
                                        "reg_email_campaign": {
                                            "type": "string",
                                            "description": "The email title user used to register"
                                        },
                                        "reg_utm": {
                                            "type": "string",
                                            "description": "The UTM tracking parameters in encoded string"
                                        },
                                        "form_meta": {
                                            "type": "array",
                                            "description": "The info user filled in form in reg app",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "question": {
                                                        "type": "string"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "docs": {
                                    "type": "array",
                                    "description": "the docs linked to the people",
                                    "items": {
                                        "type": "string",
                                        "description": "The document ID"
                                    }
                                },
                                "config_meta": {
                                    "type": "object",
                                    "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                                },
                                "tags": {
                                    "type": "string",
                                    "description": "tags for the person. Seperated by \",\" between keywords."
                                },
                                "activities": {
                                    "type": "array",
                                    "description": "activity logs of a person record.",
                                    "items": {
                                        "type": "object",
                                        "description": "A single record of people activity history",
                                        "properties": {
                                            "product": {
                                                "type": "string",
                                                "description": "the product of activity. E.g. App/Reg/etc."
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "the action info string"
                                            },
                                            "timestamp": {
                                                "type": "string",
                                                "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                                            }
                                        }
                                    }
                                },
                                "timestamps": {
                                    "type": "object",
                                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                    "properties": {
                                        "request_timestamp": {
                                            "type": "string",
                                            "description": "The time of this API request"
                                        },
                                        "creation_timestamp": {
                                            "type": "string",
                                            "description": "the time of object creation"
                                        },
                                        "update_timestamp": {
                                            "type": "string",
                                            "description": "the time of last modification"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "One or more fields is read-only or auto-generated. It should not set in request.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "General 400/500 error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "fields": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "EventObjectRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "the default Eventmobi ID of event."
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations.",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID"
                            }
                        }
                    }
                },
                "short_code": {
                    "type": "string",
                    "description": "the short-code and url path of event"
                },
                "name": {
                    "type": "string",
                    "description": "the event name"
                },
                "description": {
                    "type": "string",
                    "description": "the description of event in HTML code"
                },
                "language": {
                    "type": "string",
                    "description": "the language of event"
                },
                "event_location": {
                    "type": "object",
                    "description": "The location information of event",
                    "properties": {
                        "location_name": {
                            "type": "string",
                            "description": "the name of location (e.g. Eventmobi HQ)"
                        },
                        "location_address": {
                            "type": "string",
                            "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                        }
                    }
                },
                "event_dates": {
                    "type": "object",
                    "description": "The dates info of event",
                    "properties": {
                        "start_date": {
                            "type": "string",
                            "format": "YYYY-MM-DD",
                            "description": "the start date of event in YYYY-MM-DD"
                        },
                        "end_date": {
                            "type": "string",
                            "format": "YYYY-MM-DD",
                            "description": "the end date of event in YYYY-MM-DD"
                        },
                        "time_zone_tz": {
                            "type": "string",
                            "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                        },
                        "time_zone_offset": {
                            "type": "string",
                            "description": "the timezone offset to UTC. E.g. -05:00"
                        },
                        "time_format": {
                            "type": "integer",
                            "enum": [
                                12,
                                24
                            ],
                            "default": 12,
                            "description": "the number value can be 12 or 24 hours format. Default value: 12"
                        }
                    }
                },
                "event_urls": {
                    "type": "object",
                    "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                    "properties": {
                        "event_app": {
                            "type": "string",
                            "description": "the URL to launch event web App"
                        },
                        "reg_app": {
                            "type": "string",
                            "description": "the URL to launch reg web App"
                        },
                        "checkin_app": {
                            "type": "string",
                            "description": "the URL to launch check in App"
                        },
                        "cms_app": {
                            "type": "string",
                            "description": "the URL to launch CMS backend"
                        }
                    }
                }
            }
        },
        "EventObjectResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "the default Eventmobi ID of event."
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID"
                            }
                        }
                    }
                },
                "short_code": {
                    "type": "string",
                    "description": "the short-code and url path of event"
                },
                "name": {
                    "type": "string",
                    "description": "the event name"
                },
                "description": {
                    "type": "string",
                    "description": "the description of event in HTML code"
                },
                "language": {
                    "type": "string",
                    "description": "the language of event"
                },
                "data_counters": {
                    "type": "object",
                    "description": "The numbers of each event data type. Auto-generated: will ignore in post request",
                    "properties": {
                        "sections": {
                            "type": "integer",
                            "description": "the number of front-end UI sections in this event"
                        },
                        "people": {
                            "type": "integer",
                            "description": "the number of people (speaker, attendee, etc.) in this event. Note: the contacts in reg mailing list are not included."
                        },
                        "sessions": {
                            "type": "integer",
                            "description": "the number of session included in this event"
                        },
                        "companies": {
                            "type": "integer",
                            "description": "the number of companies included in this event"
                        },
                        "documents": {
                            "type": "integer",
                            "description": "the number of documents uploaded"
                        },
                        "maps": {
                            "type": "integer",
                            "description": "the number of maps"
                        }
                    }
                },
                "event_location": {
                    "type": "object",
                    "description": "The location information of event",
                    "properties": {
                        "location_name": {
                            "type": "string",
                            "description": "the name of location (e.g. Eventmobi HQ)"
                        },
                        "location_address": {
                            "type": "string",
                            "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                        }
                    }
                },
                "event_dates": {
                    "type": "object",
                    "description": "The dates info of event",
                    "properties": {
                        "start_date": {
                            "type": "string",
                            "format": "YYYY-MM-DD",
                            "description": "the start date of event in YYYY-MM-DD"
                        },
                        "end_date": {
                            "type": "string",
                            "format": "YYYY-MM-DD",
                            "description": "the end date of event in YYYY-MM-DD"
                        },
                        "time_zone_tz": {
                            "type": "string",
                            "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                        },
                        "time_zone_offset": {
                            "type": "string",
                            "description": "the timezone offset to UTC. E.g. -05:00"
                        },
                        "time_format": {
                            "type": "integer",
                            "enum": [
                                12,
                                24
                            ],
                            "default": 12,
                            "description": "the number value can be 12 or 24 hours format. Default value: 12"
                        }
                    }
                },
                "event_urls": {
                    "type": "object",
                    "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
                    "properties": {
                        "event_app": {
                            "type": "string",
                            "description": "the URL to launch event web App"
                        },
                        "reg_app": {
                            "type": "string",
                            "description": "the URL to launch reg web App"
                        },
                        "checkin_app": {
                            "type": "string",
                            "description": "the URL to launch check in App"
                        },
                        "cms_app": {
                            "type": "string",
                            "description": "the URL to launch CMS backend"
                        }
                    }
                },
                "timestamps": {
                    "type": "object",
                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                    "properties": {
                        "request_timestamp": {
                            "type": "string",
                            "description": "The time of this API request"
                        },
                        "creation_timestamp": {
                            "type": "string",
                            "description": "the time of object creation"
                        },
                        "update_timestamp": {
                            "type": "string",
                            "description": "the time of last modification"
                        }
                    }
                }
            }
        },
        "DataCounters": {
            "type": "object",
            "description": "The numbers of each event data type. Auto-generated: will ignore in post request",
            "properties": {
                "sections": {
                    "type": "integer",
                    "description": "the number of front-end UI sections in this event"
                },
                "people": {
                    "type": "integer",
                    "description": "the number of people (speaker, attendee, etc.) in this event. Note: the contacts in reg mailing list are not included."
                },
                "sessions": {
                    "type": "integer",
                    "description": "the number of session included in this event"
                },
                "companies": {
                    "type": "integer",
                    "description": "the number of companies included in this event"
                },
                "documents": {
                    "type": "integer",
                    "description": "the number of documents uploaded"
                },
                "maps": {
                    "type": "integer",
                    "description": "the number of maps"
                }
            }
        },
        "EventLocation": {
            "type": "object",
            "description": "The location information of event",
            "properties": {
                "location_name": {
                    "type": "string",
                    "description": "the name of location (e.g. Eventmobi HQ)"
                },
                "location_address": {
                    "type": "string",
                    "description": "the full address of location (e.g. 175 Bloor St East, Toronto, ON M4W 3R8). Please test with Google Maps to ensure the address can be located correctly."
                }
            }
        },
        "EventDates": {
            "type": "object",
            "description": "The dates info of event",
            "properties": {
                "start_date": {
                    "type": "string",
                    "format": "YYYY-MM-DD",
                    "description": "the start date of event in YYYY-MM-DD"
                },
                "end_date": {
                    "type": "string",
                    "format": "YYYY-MM-DD",
                    "description": "the end date of event in YYYY-MM-DD"
                },
                "time_zone_tz": {
                    "type": "string",
                    "description": "the timezone tz name in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. E.g. America/Toronto"
                },
                "time_zone_offset": {
                    "type": "string",
                    "description": "the timezone offset to UTC. E.g. -05:00"
                },
                "time_format": {
                    "type": "integer",
                    "enum": [
                        12,
                        24
                    ],
                    "default": 12,
                    "description": "the number value can be 12 or 24 hours format. Default value: 12"
                }
            }
        },
        "EventURLs": {
            "type": "object",
            "description": "The URLs of each Eventmobi products. Auto-generated: will ignore in post request",
            "properties": {
                "event_app": {
                    "type": "string",
                    "description": "the URL to launch event web App"
                },
                "reg_app": {
                    "type": "string",
                    "description": "the URL to launch reg web App"
                },
                "checkin_app": {
                    "type": "string",
                    "description": "the URL to launch check in App"
                },
                "cms_app": {
                    "type": "string",
                    "description": "the URL to launch CMS backend"
                }
            }
        },
        "PeopleOverview": {
            "type": "object",
            "description": "The statistics of people data",
            "properties": {
                "people_number": {
                    "type": "integer",
                    "description": "people number in this event. You may use this number for better query pagination."
                },
                "group_number": {
                    "type": "integer",
                    "description": "the number of groups defined"
                },
                "groups": {
                    "type": "array",
                    "description": "the groups defined in this event.",
                    "items": {
                        "type": "object",
                        "description": "The base response model of groups",
                        "properties": {
                            "group_id": {
                                "type": "string",
                                "description": "the unique ID of group"
                            },
                            "group_name": {
                                "type": "string",
                                "description": "the unique name of group"
                            },
                            "member_number": {
                                "type": "number",
                                "description": "the auto-generated number of members in this group"
                            },
                            "group_color": {
                                "type": "string",
                                "format": "#RRGGBB",
                                "description": "the HEX color code in #RRGGBB"
                            },
                            "group_note": {
                                "type": "string",
                                "description": "the optional note/explaination of this group"
                            },
                            "timestamps": {
                                "type": "object",
                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                "properties": {
                                    "request_timestamp": {
                                        "type": "string",
                                        "description": "The time of this API request"
                                    },
                                    "creation_timestamp": {
                                        "type": "string",
                                        "description": "the time of object creation"
                                    },
                                    "update_timestamp": {
                                        "type": "string",
                                        "description": "the time of last modification"
                                    }
                                }
                            }
                        }
                    }
                },
                "custom_field_number": {
                    "type": "integer",
                    "description": "the number of custom fields"
                },
                "custom_fields": {
                    "type": "array",
                    "description": "the custom fields defined in this event",
                    "items": {
                        "type": "object",
                        "description": "The base custom field model",
                        "properties": {
                            "custom_field_id": {
                                "type": "string",
                                "description": "the unique ID of custom field"
                            },
                            "field_name": {
                                "type": "string",
                                "description": "the field name"
                            },
                            "view_permission": {
                                "type": "string",
                                "enum": [
                                    "Everyone",
                                    "Organizer and Data Owner",
                                    "Organizer"
                                ]
                            },
                            "edit_permission": {
                                "type": "string",
                                "enum": [
                                    "Everyone",
                                    "Organizer and Data Owner",
                                    "Organizer"
                                ]
                            }
                        }
                    }
                },
                "timestamps": {
                    "type": "object",
                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                    "properties": {
                        "request_timestamp": {
                            "type": "string",
                            "description": "The time of this API request"
                        },
                        "creation_timestamp": {
                            "type": "string",
                            "description": "the time of object creation"
                        },
                        "update_timestamp": {
                            "type": "string",
                            "description": "the time of last modification"
                        }
                    }
                }
            }
        },
        "PeopleRecordsResponse": {
            "type": "object",
            "description": "the query of people",
            "properties": {
                "query_string": {
                    "type": "string",
                    "description": "the original query string. Offset and limit parameter will show default value (offset=0&limit=20) if not provided in original request."
                },
                "record_number": {
                    "type": "integer",
                    "description": "the number of recodes that matches query. If no query filters requested, this will be the total number of people."
                },
                "people_list": {
                    "type": "array",
                    "description": "the array of people",
                    "items": {
                        "type": "object",
                        "description": "the single person record",
                        "properties": {
                            "person_id": {
                                "type": "string",
                                "description": "the unique ID of person in people"
                            },
                            "external_ids": {
                                "type": "array",
                                "description": "the external IDs used for integrations",
                                "items": {
                                    "type": "object",
                                    "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                                    "properties": {
                                        "id_system": {
                                            "type": "string",
                                            "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "the external ID"
                                        }
                                    }
                                }
                            },
                            "profile": {
                                "type": "object",
                                "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "email_address": {
                                        "type": "string"
                                    },
                                    "picture": {
                                        "type": "string"
                                    },
                                    "groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "description": "the ID of groups. Please use /people/groups to check group config."
                                        }
                                    },
                                    "company": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "about": {
                                        "type": "string"
                                    },
                                    "social_contacts": {
                                        "type": "object",
                                        "description": "The general contact info record",
                                        "properties": {
                                            "twitter_url": {
                                                "type": "string"
                                            },
                                            "facebook_url": {
                                                "type": "string"
                                            },
                                            "linkedin_url": {
                                                "type": "string"
                                            },
                                            "website_url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "custom_fields_meta": {
                                "type": "object",
                                "description": "the {custom_field_key:custom_field_value} format JSON object"
                            },
                            "favorite_data": {
                                "type": "object",
                                "properties": {
                                    "sessions": {
                                        "type": "object"
                                    },
                                    "companies": {
                                        "type": "object"
                                    },
                                    "docs": {
                                        "type": "object"
                                    },
                                    "notes": {
                                        "type": "object"
                                    }
                                }
                            },
                            "regstration": {
                                "type": "object",
                                "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                                "properties": {
                                    "order_ticket_name": {
                                        "type": "string",
                                        "description": "Ticket Name"
                                    },
                                    "order_paid": {
                                        "type": "string",
                                        "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                                    },
                                    "order_transaction_id": {
                                        "type": "string",
                                        "description": "Striple transaction id for tracking"
                                    },
                                    "reg_email_campaign": {
                                        "type": "string",
                                        "description": "The email title user used to register"
                                    },
                                    "reg_utm": {
                                        "type": "string",
                                        "description": "The UTM tracking parameters in encoded string"
                                    },
                                    "form_meta": {
                                        "type": "array",
                                        "description": "The info user filled in form in reg app",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "question": {
                                                    "type": "string"
                                                },
                                                "answer": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "docs": {
                                "type": "array",
                                "description": "the docs linked to the people",
                                "items": {
                                    "type": "string",
                                    "description": "The document ID"
                                }
                            },
                            "config_meta": {
                                "type": "object",
                                "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                            },
                            "tags": {
                                "type": "string",
                                "description": "tags for the person. Seperated by \",\" between keywords."
                            },
                            "activities": {
                                "type": "array",
                                "description": "activity logs of a person record.",
                                "items": {
                                    "type": "object",
                                    "description": "A single record of people activity history",
                                    "properties": {
                                        "product": {
                                            "type": "string",
                                            "description": "the product of activity. E.g. App/Reg/etc."
                                        },
                                        "action": {
                                            "type": "string",
                                            "description": "the action info string"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                                        }
                                    }
                                }
                            },
                            "timestamps": {
                                "type": "object",
                                "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                                "properties": {
                                    "request_timestamp": {
                                        "type": "string",
                                        "description": "The time of this API request"
                                    },
                                    "creation_timestamp": {
                                        "type": "string",
                                        "description": "the time of object creation"
                                    },
                                    "update_timestamp": {
                                        "type": "string",
                                        "description": "the time of last modification"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "PersonObjectRequest": {
            "type": "object",
            "description": "the single person record",
            "properties": {
                "person_id": {
                    "type": "string",
                    "description": "the unique ID of person in people"
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID"
                            }
                        }
                    }
                },
                "profile": {
                    "type": "object",
                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                    "properties": {
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "email_address": {
                            "type": "string"
                        },
                        "picture": {
                            "type": "string"
                        },
                        "groups": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "the ID of groups. Please use /people/groups to check group config."
                            }
                        },
                        "company": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "about": {
                            "type": "string"
                        },
                        "social_contacts": {
                            "type": "object",
                            "description": "The general contact info record",
                            "properties": {
                                "twitter_url": {
                                    "type": "string"
                                },
                                "facebook_url": {
                                    "type": "string"
                                },
                                "linkedin_url": {
                                    "type": "string"
                                },
                                "website_url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "upload_picture": {
                    "type": "object",
                    "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture filename in base profile.",
                    "properties": {
                        "url": {
                            "type": "string",
                            "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                        },
                        "trim": {
                            "type": "string",
                            "format": "AxB:CxD",
                            "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. This parameter is required if your image is not square (same height and length)"
                        },
                        "rename": {
                            "type": "string",
                            "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                        }
                    }
                },
                "uplaod_docs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "Use this structure if you want Eventmobi to download the document from Internet locations and associate it.",
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "file location. Have to have a valid document type ()"
                            },
                            "rename": {
                                "type": "string",
                                "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                            },
                            "assign_groups": {
                                "type": "array",
                                "description": "the groups this documetion belongs to. the groups must be defined in CMS or this will be ignored.",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "PersonObjectResponse": {
            "type": "object",
            "description": "the single person record",
            "properties": {
                "person_id": {
                    "type": "string",
                    "description": "the unique ID of person in people"
                },
                "external_ids": {
                    "type": "array",
                    "description": "the external IDs used for integrations",
                    "items": {
                        "type": "object",
                        "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
                        "properties": {
                            "id_system": {
                                "type": "string",
                                "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                            },
                            "id": {
                                "type": "string",
                                "description": "the external ID"
                            }
                        }
                    }
                },
                "profile": {
                    "type": "object",
                    "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
                    "properties": {
                        "first_name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "email_address": {
                            "type": "string"
                        },
                        "picture": {
                            "type": "string"
                        },
                        "groups": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "the ID of groups. Please use /people/groups to check group config."
                            }
                        },
                        "company": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "about": {
                            "type": "string"
                        },
                        "social_contacts": {
                            "type": "object",
                            "description": "The general contact info record",
                            "properties": {
                                "twitter_url": {
                                    "type": "string"
                                },
                                "facebook_url": {
                                    "type": "string"
                                },
                                "linkedin_url": {
                                    "type": "string"
                                },
                                "website_url": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "custom_fields_meta": {
                    "type": "object",
                    "description": "the {custom_field_key:custom_field_value} format JSON object"
                },
                "favorite_data": {
                    "type": "object",
                    "properties": {
                        "sessions": {
                            "type": "object"
                        },
                        "companies": {
                            "type": "object"
                        },
                        "docs": {
                            "type": "object"
                        },
                        "notes": {
                            "type": "object"
                        }
                    }
                },
                "regstration": {
                    "type": "object",
                    "description": "the registriation info. Only avialable when using Eventmobi registration product.",
                    "properties": {
                        "order_ticket_name": {
                            "type": "string",
                            "description": "Ticket Name"
                        },
                        "order_paid": {
                            "type": "string",
                            "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                        },
                        "order_transaction_id": {
                            "type": "string",
                            "description": "Striple transaction id for tracking"
                        },
                        "reg_email_campaign": {
                            "type": "string",
                            "description": "The email title user used to register"
                        },
                        "reg_utm": {
                            "type": "string",
                            "description": "The UTM tracking parameters in encoded string"
                        },
                        "form_meta": {
                            "type": "array",
                            "description": "The info user filled in form in reg app",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "question": {
                                        "type": "string"
                                    },
                                    "answer": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "docs": {
                    "type": "array",
                    "description": "the docs linked to the people",
                    "items": {
                        "type": "string",
                        "description": "The document ID"
                    }
                },
                "config_meta": {
                    "type": "object",
                    "description": "the {config_feature_key:config_value} format JSON object E.g.  {\"Enable Messaging\":\"true\"}."
                },
                "tags": {
                    "type": "string",
                    "description": "tags for the person. Seperated by \",\" between keywords."
                },
                "activities": {
                    "type": "array",
                    "description": "activity logs of a person record.",
                    "items": {
                        "type": "object",
                        "description": "A single record of people activity history",
                        "properties": {
                            "product": {
                                "type": "string",
                                "description": "the product of activity. E.g. App/Reg/etc."
                            },
                            "action": {
                                "type": "string",
                                "description": "the action info string"
                            },
                            "timestamp": {
                                "type": "string",
                                "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                            }
                        }
                    }
                },
                "timestamps": {
                    "type": "object",
                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                    "properties": {
                        "request_timestamp": {
                            "type": "string",
                            "description": "The time of this API request"
                        },
                        "creation_timestamp": {
                            "type": "string",
                            "description": "the time of object creation"
                        },
                        "update_timestamp": {
                            "type": "string",
                            "description": "the time of last modification"
                        }
                    }
                }
            }
        },
        "PersonProfile": {
            "type": "object",
            "description": "the profile data of person. Including standard Eventmobi fields as well as custom fields.",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "the ID of groups. Please use /people/groups to check group config."
                    }
                },
                "company": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "social_contacts": {
                    "type": "object",
                    "description": "The general contact info record",
                    "properties": {
                        "twitter_url": {
                            "type": "string"
                        },
                        "facebook_url": {
                            "type": "string"
                        },
                        "linkedin_url": {
                            "type": "string"
                        },
                        "website_url": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "PersonRegistration": {
            "type": "object",
            "description": "the registriation info. Only avialable when using Eventmobi registration product.",
            "properties": {
                "order_ticket_name": {
                    "type": "string",
                    "description": "Ticket Name"
                },
                "order_paid": {
                    "type": "string",
                    "description": "Amount and Currency Type in format of \"$ 1,289 USD\""
                },
                "order_transaction_id": {
                    "type": "string",
                    "description": "Striple transaction id for tracking"
                },
                "reg_email_campaign": {
                    "type": "string",
                    "description": "The email title user used to register"
                },
                "reg_utm": {
                    "type": "string",
                    "description": "The UTM tracking parameters in encoded string"
                },
                "form_meta": {
                    "type": "array",
                    "description": "The info user filled in form in reg app",
                    "items": {
                        "type": "object",
                        "properties": {
                            "question": {
                                "type": "string"
                            },
                            "answer": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "IDs": {
            "type": "object",
            "description": "The IDs from different systems. Used for integration mapping. A default Eventmobi ID will always be generated and cannot be changed once created. Additional IDs can be added/updated for external systems.",
            "properties": {
                "id_system": {
                    "type": "string",
                    "description": "The external ID can be accessed when query indicateds which system the ID belongs to. The default system Eventmobi is reserved.\n"
                },
                "id": {
                    "type": "string",
                    "description": "the external ID"
                }
            }
        },
        "DocLink": {
            "type": "string",
            "description": "The document ID"
        },
        "RequestUploadAssociateDoc": {
            "type": "object",
            "description": "Use this structure if you want Eventmobi to download the document from Internet locations and associate it.",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "file location. Have to have a valid document type ()"
                },
                "rename": {
                    "type": "string",
                    "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                },
                "assign_groups": {
                    "type": "array",
                    "description": "the groups this documetion belongs to. the groups must be defined in CMS or this will be ignored.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "RequestUploadAssociatePicture": {
            "type": "object",
            "description": "Use this structure if you want Eventmobi to download the picture from Internet locations and associate picture. You will need to specify image cropping info if the picture is not square (same height and length). This will overwrite the picture filename in base profile.",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "file location. Have to be a valid image file. Supports jpeg, jpg and png."
                },
                "trim": {
                    "type": "string",
                    "format": "AxB:CxD",
                    "description": "AxB:CxD means manually crop the image at left-top point AxB and right-bottom point CxD in pixels. This parameter is required if your image is not square (same height and length)"
                },
                "rename": {
                    "type": "string",
                    "description": "Must be the same file type as origin. Supports jpeg, jpg and png."
                }
            }
        },
        "SocialContactInfo": {
            "type": "object",
            "description": "The general contact info record",
            "properties": {
                "twitter_url": {
                    "type": "string"
                },
                "facebook_url": {
                    "type": "string"
                },
                "linkedin_url": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "ResponseGeneralCustomFields": {
            "type": "object",
            "description": "The base custom field model",
            "properties": {
                "custom_field_id": {
                    "type": "string",
                    "description": "the unique ID of custom field"
                },
                "field_name": {
                    "type": "string",
                    "description": "the field name"
                },
                "view_permission": {
                    "type": "string",
                    "enum": [
                        "Everyone",
                        "Organizer and Data Owner",
                        "Organizer"
                    ]
                },
                "edit_permission": {
                    "type": "string",
                    "enum": [
                        "Everyone",
                        "Organizer and Data Owner",
                        "Organizer"
                    ]
                }
            }
        },
        "ResponseGeneralGroups": {
            "type": "object",
            "description": "The base response model of groups",
            "properties": {
                "group_id": {
                    "type": "string",
                    "description": "the unique ID of group"
                },
                "group_name": {
                    "type": "string",
                    "description": "the unique name of group"
                },
                "member_number": {
                    "type": "number",
                    "description": "the auto-generated number of members in this group"
                },
                "group_color": {
                    "type": "string",
                    "format": "#RRGGBB",
                    "description": "the HEX color code in #RRGGBB"
                },
                "group_note": {
                    "type": "string",
                    "description": "the optional note/explaination of this group"
                },
                "timestamps": {
                    "type": "object",
                    "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
                    "properties": {
                        "request_timestamp": {
                            "type": "string",
                            "description": "The time of this API request"
                        },
                        "creation_timestamp": {
                            "type": "string",
                            "description": "the time of object creation"
                        },
                        "update_timestamp": {
                            "type": "string",
                            "description": "the time of last modification"
                        }
                    }
                }
            }
        },
        "ResponseGroupArray": {
            "type": "array",
            "description": "The array of groups",
            "items": {
                "type": "object",
                "properties": {
                    "group_id": {
                        "type": "string",
                        "description": "the unique ID of group (?@Ryan)"
                    },
                    "group_name": {
                        "type": "string",
                        "description": "the name of group"
                    }
                }
            }
        },
        "AttendeePersonalData": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "object"
                },
                "companies": {
                    "type": "object"
                },
                "docs": {
                    "type": "object"
                },
                "notes": {
                    "type": "object"
                }
            }
        },
        "GeneralActivityRecord": {
            "type": "object",
            "description": "A single record of people activity history",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "the product of activity. E.g. App/Reg/etc."
                },
                "action": {
                    "type": "string",
                    "description": "the action info string"
                },
                "timestamp": {
                    "type": "string",
                    "description": "depends on the query parameter timestamp_format setting, this can return GMT/UTC timestamp integer or ISO string."
                }
            }
        },
        "Timestamps": {
            "type": "object",
            "description": "The timestamps for the object in either timestamp integer or ISO Date+Time+TimeZone format (E.g. 2016-09-02T15:26:49-04:00 for the same timezone of this event) . Please use query parameter to idenitfy which one you want. Default value is ISO format.",
            "properties": {
                "request_timestamp": {
                    "type": "string",
                    "description": "The time of this API request"
                },
                "creation_timestamp": {
                    "type": "string",
                    "description": "the time of object creation"
                },
                "update_timestamp": {
                    "type": "string",
                    "description": "the time of last modification"
                }
            }
        },
        "PlaceHolder": {
            "type": "object",
            "description": "This is the placeholder"
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    },
    "parameters": {
        "EventIDParam": {
            "name": "event_id",
            "in": "path",
            "description": "the event ID of specific event.",
            "required": true,
            "type": "string"
        },
        "PersonIDParam": {
            "name": "person_id",
            "in": "path",
            "description": "the person ID of specific event.",
            "required": true,
            "type": "string"
        },
        "LimitParam": {
            "name": "limit",
            "in": "query",
            "description": "Limits the number of returned results",
            "required": false,
            "type": "number",
            "format": "int32"
        },
        "OffsetParam": {
            "name": "offset",
            "in": "query",
            "description": "Define the offset index of returned results",
            "required": false,
            "type": "number",
            "format": "int32"
        },
        "IDSystemParam": {
            "name": "ext_id_system",
            "in": "query",
            "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
            "required": false,
            "type": "string"
        },
        "TimestampFormat": {
            "name": "timestamp_format",
            "in": "query",
            "description": "the external system of ID used in path. Default value is Eventmobi. Once used, all IDs will use external system. For each ID in path, if the external system ID is not defined, will use default instead.",
            "required": false,
            "type": "string",
            "default": "GMT/UTC timestamp integer",
            "enum": [
                "GMT/UTC timestamp integer",
                "ISO string with timezone"
            ]
        }
    }
}